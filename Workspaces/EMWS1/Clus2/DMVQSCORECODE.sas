*****************************************;
*** Begin Scoring Code from PROC DMVQ ***;
*****************************************;


*** Begin Class Look-up, Standardization, Replacement ;
drop _dm_bad; _dm_bad = 0;

*** Standardize Age ;
drop T_Age ;
if missing( Age ) then T_Age = .;
else T_Age = (Age - 39.7511401418189) * 0.10190285909929;

*** Generate dummy variables for Career ;
drop Careeradministration Careerblue_collar Careerentrepreneur Careerhousemaid
         Careermanagement Careerretired Careerself_employed Careerservices 
        Careerstudent Careertechnician Careerunemployed ;
if missing( Career ) then do;
   Careeradministration = .;
   Careerblue_collar = .;
   Careerentrepreneur = .;
   Careerhousemaid = .;
   Careermanagement = .;
   Careerretired = .;
   Careerself_employed = .;
   Careerservices = .;
   Careerstudent = .;
   Careertechnician = .;
   Careerunemployed = .;
end;
else do;
   length _dm16 $ 16; drop _dm16 ;
   _dm16 = put( Career , $16. );
   %DMNORMIP( _dm16 )
   _dm_find = 0; drop _dm_find;
   if _dm16 <= 'RETIRED'  then do;
      if _dm16 <= 'ENTREPRENEUR'  then do;
         if _dm16 <= 'BLUE-COLLAR'  then do;
            if _dm16 = 'ADMINISTRATION'  then do;
               Careeradministration = 0.51586033321344;
               Careerblue_collar = -0.16680913181185;
               Careerentrepreneur = -0.0587689896351;
               Careerhousemaid = -0.04941368846911;
               Careermanagement = -0.08355538377402;
               Careerretired = -0.05735690463314;
               Careerself_employed = -0.05775626645781;
               Careerservices = -0.10083546520573;
               Careerstudent = -0.03608694469763;
               Careertechnician = -0.13530190277446;
               Careerunemployed = -0.04755584304166;
               _dm_find = 1;
            end;
            else do;
               if _dm16 = 'BLUE-COLLAR'  then do;
                  Careeradministration = -0.17622292360277;
                  Careerblue_collar = 0.54497265888362;
                  Careerentrepreneur = -0.0587689896351;
                  Careerhousemaid = -0.04941368846911;
                  Careermanagement = -0.08355538377402;
                  Careerretired = -0.05735690463314;
                  Careerself_employed = -0.05775626645781;
                  Careerservices = -0.10083546520573;
                  Careerstudent = -0.03608694469763;
                  Careertechnician = -0.13530190277446;
                  Careerunemployed = -0.04755584304166;
                  _dm_find = 1;
               end;
            end;
         end;
         else do;
            if _dm16 = 'ENTREPRENEUR'  then do;
               Careeradministration = -0.17622292360277;
               Careerblue_collar = -0.16680913181185;
               Careerentrepreneur = 1.5468432697927;
               Careerhousemaid = -0.04941368846911;
               Careermanagement = -0.08355538377402;
               Careerretired = -0.05735690463314;
               Careerself_employed = -0.05775626645781;
               Careerservices = -0.10083546520573;
               Careerstudent = -0.03608694469763;
               Careertechnician = -0.13530190277446;
               Careerunemployed = -0.04755584304166;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm16 <= 'MANAGEMENT'  then do;
            if _dm16 = 'HOUSEMAID'  then do;
               Careeradministration = -0.17622292360277;
               Careerblue_collar = -0.16680913181185;
               Careerentrepreneur = -0.0587689896351;
               Careerhousemaid = 1.83970108093432;
               Careermanagement = -0.08355538377402;
               Careerretired = -0.05735690463314;
               Careerself_employed = -0.05775626645781;
               Careerservices = -0.10083546520573;
               Careerstudent = -0.03608694469763;
               Careertechnician = -0.13530190277446;
               Careerunemployed = -0.04755584304166;
               _dm_find = 1;
            end;
            else do;
               if _dm16 = 'MANAGEMENT'  then do;
                  Careeradministration = -0.17622292360277;
                  Careerblue_collar = -0.16680913181185;
                  Careerentrepreneur = -0.0587689896351;
                  Careerhousemaid = -0.04941368846911;
                  Careermanagement = 1.08797796124574;
                  Careerretired = -0.05735690463314;
                  Careerself_employed = -0.05775626645781;
                  Careerservices = -0.10083546520573;
                  Careerstudent = -0.03608694469763;
                  Careertechnician = -0.13530190277446;
                  Careerunemployed = -0.04755584304166;
                  _dm_find = 1;
               end;
            end;
         end;
         else do;
            if _dm16 = 'RETIRED'  then do;
               Careeradministration = -0.17622292360277;
               Careerblue_collar = -0.16680913181185;
               Careerentrepreneur = -0.0587689896351;
               Careerhousemaid = -0.04941368846911;
               Careermanagement = -0.08355538377402;
               Careerretired = 1.58492541867484;
               Careerself_employed = -0.05775626645781;
               Careerservices = -0.10083546520573;
               Careerstudent = -0.03608694469763;
               Careertechnician = -0.13530190277446;
               Careerunemployed = -0.04755584304166;
               _dm_find = 1;
            end;
         end;
      end;
   end;
   else do;
      if _dm16 <= 'STUDENT'  then do;
         if _dm16 <= 'SERVICES'  then do;
            if _dm16 = 'SELF-EMPLOYED'  then do;
               Careeradministration = -0.17622292360277;
               Careerblue_collar = -0.16680913181185;
               Careerentrepreneur = -0.0587689896351;
               Careerhousemaid = -0.04941368846911;
               Careermanagement = -0.08355538377402;
               Careerretired = -0.05735690463314;
               Careerself_employed = 1.57396628391776;
               Careerservices = -0.10083546520573;
               Careerstudent = -0.03608694469763;
               Careertechnician = -0.13530190277446;
               Careerunemployed = -0.04755584304166;
               _dm_find = 1;
            end;
            else do;
               if _dm16 = 'SERVICES'  then do;
                  Careeradministration = -0.17622292360277;
                  Careerblue_collar = -0.16680913181185;
                  Careerentrepreneur = -0.0587689896351;
                  Careerhousemaid = -0.04941368846911;
                  Careermanagement = -0.08355538377402;
                  Careerretired = -0.05735690463314;
                  Careerself_employed = -0.05775626645781;
                  Careerservices = 0.9015321732696;
                  Careerstudent = -0.03608694469763;
                  Careertechnician = -0.13530190277446;
                  Careerunemployed = -0.04755584304166;
                  _dm_find = 1;
               end;
            end;
         end;
         else do;
            if _dm16 = 'STUDENT'  then do;
               Careeradministration = -0.17622292360277;
               Careerblue_collar = -0.16680913181185;
               Careerentrepreneur = -0.0587689896351;
               Careerhousemaid = -0.04941368846911;
               Careermanagement = -0.08355538377402;
               Careerretired = -0.05735690463314;
               Careerself_employed = -0.05775626645781;
               Careerservices = -0.10083546520573;
               Careerstudent = 2.51909428329962;
               Careertechnician = -0.13530190277446;
               Careerunemployed = -0.04755584304166;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm16 = 'TECHNICIAN'  then do;
            Careeradministration = -0.17622292360277;
            Careerblue_collar = -0.16680913181185;
            Careerentrepreneur = -0.0587689896351;
            Careerhousemaid = -0.04941368846911;
            Careermanagement = -0.08355538377402;
            Careerretired = -0.05735690463314;
            Careerself_employed = -0.05775626645781;
            Careerservices = -0.10083546520573;
            Careerstudent = -0.03608694469763;
            Careertechnician = 0.67187832710015;
            Careerunemployed = -0.04755584304166;
            _dm_find = 1;
         end;
         else do;
            if _dm16 = 'UNEMPLOYED'  then do;
               Careeradministration = -0.17622292360277;
               Careerblue_collar = -0.16680913181185;
               Careerentrepreneur = -0.0587689896351;
               Careerhousemaid = -0.04941368846911;
               Careermanagement = -0.08355538377402;
               Careerretired = -0.05735690463314;
               Careerself_employed = -0.05775626645781;
               Careerservices = -0.10083546520573;
               Careerstudent = -0.03608694469763;
               Careertechnician = -0.13530190277446;
               Careerunemployed = 1.9115719599364;
               _dm_find = 1;
            end;
         end;
      end;
   end;
   if not _dm_find then do;
      Careeradministration = .;
      Careerblue_collar = .;
      Careerentrepreneur = .;
      Careerhousemaid = .;
      Careermanagement = .;
      Careerretired = .;
      Careerself_employed = .;
      Careerservices = .;
      Careerstudent = .;
      Careertechnician = .;
      Careerunemployed = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for Education ;
drop Educationilliterate Educationprimary_education 
        Educationprofessional_educat Educationsecondary_education 
        Educationuniversity_educatio ;
if missing( Education ) then do;
   Educationilliterate = .;
   Educationprimary_education = .;
   Educationprofessional_educat = .;
   Educationsecondary_education = .;
   Educationuniversity_educatio = .;
end;
else do;
   length _dm24 $ 24; drop _dm24 ;
   _dm24 = put( Education , $24. );
   %DMNORMIP( _dm24 )
   _dm_find = 0; drop _dm_find;
   if _dm24 <= 'PROFESSIONAL EDUCATION'  then do;
      if _dm24 <= 'PRIMARY EDUCATION'  then do;
         if _dm24 = 'ILLITERATE'  then do;
            Educationilliterate = 22.0298500130819;
            Educationprimary_education = -0.19892629030724;
            Educationprofessional_educat = -0.17519457945226;
            Educationsecondary_education = -0.3660658600899;
            Educationuniversity_educatio = -0.29286621546649;
            _dm_find = 1;
         end;
         else do;
            if _dm24 = 'PRIMARY EDUCATION'  then do;
               Educationilliterate = -0.00907832396853;
               Educationprimary_education = 1.00536794351398;
               Educationprofessional_educat = -0.17519457945226;
               Educationsecondary_education = -0.3660658600899;
               Educationuniversity_educatio = -0.29286621546649;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm24 = 'PROFESSIONAL EDUCATION'  then do;
            Educationilliterate = -0.00907832396853;
            Educationprimary_education = -0.19892629030724;
            Educationprofessional_educat = 1.14155424227354;
            Educationsecondary_education = -0.3660658600899;
            Educationuniversity_educatio = -0.29286621546649;
            _dm_find = 1;
         end;
      end;
   end;
   else do;
      if _dm24 = 'SECONDARY EDUCATION'  then do;
         Educationilliterate = -0.00907832396853;
         Educationprimary_education = -0.19892629030724;
         Educationprofessional_educat = -0.17519457945226;
         Educationsecondary_education = 0.54633369893588;
         Educationuniversity_educatio = -0.29286621546649;
         _dm_find = 1;
      end;
      else do;
         if _dm24 = 'UNIVERSITY EDUCATION'  then do;
            Educationilliterate = -0.00907832396853;
            Educationprimary_education = -0.19892629030724;
            Educationprofessional_educat = -0.17519457945226;
            Educationsecondary_education = -0.3660658600899;
            Educationuniversity_educatio = 0.68288557995158;
            _dm_find = 1;
         end;
      end;
   end;
   if not _dm_find then do;
      Educationilliterate = .;
      Educationprimary_education = .;
      Educationprofessional_educat = .;
      Educationsecondary_education = .;
      Educationuniversity_educatio = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for Marital_Statues ;
drop Marital_Statuesdivorced Marital_Statuesmarried Marital_Statuessingle ;
if missing( Marital_Statues ) then do;
   Marital_Statuesdivorced = .;
   Marital_Statuesmarried = .;
   Marital_Statuessingle = .;
end;
else do;
   length _dm10 $ 10; drop _dm10 ;
   _dm10 = put( Marital_Statues , $10. );
   %DMNORMIP( _dm10 )
   if _dm10 = 'MARRIED'  then do;
      Marital_Statuesdivorced = -0.2064750846264;
      Marital_Statuesmarried = 0.45850447935303;
      Marital_Statuessingle = -0.35412036665997;
   end;
   else if _dm10 = 'SINGLE'  then do;
      Marital_Statuesdivorced = -0.2064750846264;
      Marital_Statuesmarried = -0.72697986752954;
      Marital_Statuessingle = 0.94127183026958;
   end;
   else if _dm10 = 'DIVORCED'  then do;
      Marital_Statuesdivorced = 1.61435228984108;
      Marital_Statuesmarried = -0.72697986752954;
      Marital_Statuessingle = -0.35412036665997;
   end;
   else do;
      Marital_Statuesdivorced = .;
      Marital_Statuesmarried = .;
      Marital_Statuessingle = .;
      _DM_BAD = 1;
   end;
end;

*** End Class Look-up, Standardization, Replacement ;


*** Omitted Cases;
if _dm_bad then do;
   _SEGMENT_ = .; Distance = .;
   goto CLUS2vlex ;
end; *** omitted;

*** Compute Distances and Cluster Membership;
label _SEGMENT_ = 'Segment Id' ;
label Distance = 'Distance' ;
array CLUS2vads [5] _temporary_;
drop _vqclus _vqmvar _vqnvar;
_vqmvar = 0;
do _vqclus = 1 to 5; CLUS2vads [_vqclus] = 0; end;
if not missing( T_Age ) then do;
   CLUS2vads [1] + ( T_Age - 1.18424929125643 )**2;
   CLUS2vads [2] + ( T_Age - 0.41497866023155 )**2;
   CLUS2vads [3] + ( T_Age - 0.79690974995832 )**2;
   CLUS2vads [4] + ( T_Age - -0.47397955291028 )**2;
   CLUS2vads [5] + ( T_Age - -0.73775197720301 )**2;
end;
else _vqmvar + 1;
if not missing( Careeradministration ) then do;
   CLUS2vads [1] + ( Careeradministration - -0.05871660538976 )**2;
   CLUS2vads [2] + ( Careeradministration - 0.0225282586621 )**2;
   CLUS2vads [3] + ( Careeradministration - -0.12678840525876 )**2;
   CLUS2vads [4] + ( Careeradministration - -0.00928798287664 )**2;
   CLUS2vads [5] + ( Careeradministration - 0.06306076830755 )**2;
end;
else _vqmvar + 0.09090909090909;
if not missing( Careerblue_collar ) then do;
   CLUS2vads [1] + ( Careerblue_collar - 0.02661494432076 )**2;
   CLUS2vads [2] + ( Careerblue_collar - -0.05422567463931 )**2;
   CLUS2vads [3] + ( Careerblue_collar - 0.23992332001413 )**2;
   CLUS2vads [4] + ( Careerblue_collar - 0.03248742973477 )**2;
   CLUS2vads [5] + ( Careerblue_collar - -0.04867107526489 )**2;
end;
else _vqmvar + 0.09090909090909;
if not missing( Careerentrepreneur ) then do;
   CLUS2vads [1] + ( Careerentrepreneur - 0.01583664496945 )**2;
   CLUS2vads [2] + ( Careerentrepreneur - 0.00535425351598 )**2;
   CLUS2vads [3] + ( Careerentrepreneur - 0.05591760032402 )**2;
   CLUS2vads [4] + ( Careerentrepreneur - 0.00760370649344 )**2;
   CLUS2vads [5] + ( Careerentrepreneur - -0.02887870870372 )**2;
end;
else _vqmvar + 0.09090909090909;
if not missing( Careerhousemaid ) then do;
   CLUS2vads [1] + ( Careerhousemaid - 0.03150082874052 )**2;
   CLUS2vads [2] + ( Careerhousemaid - 0.01411933583032 )**2;
   CLUS2vads [3] + ( Careerhousemaid - 0.08552308077399 )**2;
   CLUS2vads [4] + ( Careerhousemaid - -0.00423515478268 )**2;
   CLUS2vads [5] + ( Careerhousemaid - -0.03246525496543 )**2;
end;
else _vqmvar + 0.09090909090909;
if not missing( Careermanagement ) then do;
   CLUS2vads [1] + ( Careermanagement - 0.02802536313657 )**2;
   CLUS2vads [2] + ( Careermanagement - -0.00013826961208 )**2;
   CLUS2vads [3] + ( Careermanagement - -0.08355538377402 )**2;
   CLUS2vads [4] + ( Careermanagement - 0.0027113714148 )**2;
   CLUS2vads [5] + ( Careermanagement - -0.03205363753115 )**2;
end;
else _vqmvar + 0.09090909090909;
if not missing( Careerretired ) then do;
   CLUS2vads [1] + ( Careerretired - 0.1137066362003 )**2;
   CLUS2vads [2] + ( Careerretired - 0.03196323223621 )**2;
   CLUS2vads [3] + ( Careerretired - 0.05994897560314 )**2;
   CLUS2vads [4] + ( Careerretired - -0.05519742754792 )**2;
   CLUS2vads [5] + ( Careerretired - -0.05422594136115 )**2;
end;
else _vqmvar + 0.09090909090909;
if not missing( Careerself_employed ) then do;
   CLUS2vads [1] + ( Careerself_employed - 0.00602500478016 )**2;
   CLUS2vads [2] + ( Careerself_employed - -0.01059665517528 )**2;
   CLUS2vads [3] + ( Careerself_employed - 0.1753469550244 )**2;
   CLUS2vads [4] + ( Careerself_employed - 0.00178390549868 )**2;
   CLUS2vads [5] + ( Careerself_employed - -0.00432316286808 )**2;
end;
else _vqmvar + 0.09090909090909;
if not missing( Careerservices ) then do;
   CLUS2vads [1] + ( Careerservices - -0.01927306872552 )**2;
   CLUS2vads [2] + ( Careerservices - 0.02373623552964 )**2;
   CLUS2vads [3] + ( Careerservices - -0.10083546520573 )**2;
   CLUS2vads [4] + ( Careerservices - 0.00600796239966 )**2;
   CLUS2vads [5] + ( Careerservices - 0.0014584173795 )**2;
end;
else _vqmvar + 0.09090909090909;
if not missing( Careerstudent ) then do;
   CLUS2vads [1] + ( Careerstudent - -0.03608694469763 )**2;
   CLUS2vads [2] + ( Careerstudent - -0.03407287646748 )**2;
   CLUS2vads [3] + ( Careerstudent - -0.03608694469763 )**2;
   CLUS2vads [4] + ( Careerstudent - -0.0295771963357 )**2;
   CLUS2vads [5] + ( Careerstudent - 0.09171509945249 )**2;
end;
else _vqmvar + 0.09090909090909;
if not missing( Careertechnician ) then do;
   CLUS2vads [1] + ( Careertechnician - -0.03593750099073 )**2;
   CLUS2vads [2] + ( Careertechnician - 0.0046715474928 )**2;
   CLUS2vads [3] + ( Careertechnician - -0.13530190277446 )**2;
   CLUS2vads [4] + ( Careertechnician - 0.00121822486212 )**2;
   CLUS2vads [5] + ( Careertechnician - 0.03315861172555 )**2;
end;
else _vqmvar + 0.09090909090909;
if not missing( Careerunemployed ) then do;
   CLUS2vads [1] + ( Careerunemployed - 0.00378443631407 )**2;
   CLUS2vads [2] + ( Careerunemployed - 0.00752210622756 )**2;
   CLUS2vads [3] + ( Careerunemployed - -0.04755584304166 )**2;
   CLUS2vads [4] + ( Careerunemployed - -0.00086394109691 )**2;
   CLUS2vads [5] + ( Careerunemployed - -0.00581150272924 )**2;
end;
else _vqmvar + 0.09090909090909;
if not missing( Educationilliterate ) then do;
   CLUS2vads [1] + ( Educationilliterate - -0.00907832396853 )**2;
   CLUS2vads [2] + ( Educationilliterate - -0.00907832396853 )**2;
   CLUS2vads [3] + ( Educationilliterate - 22.0298500130819 )**2;
   CLUS2vads [4] + ( Educationilliterate - -0.00907832396853 )**2;
   CLUS2vads [5] + ( Educationilliterate - -0.00907832396853 )**2;
end;
else _vqmvar + 0.19999999999999;
if not missing( Educationprimary_education ) then do;
   CLUS2vads [1] + ( Educationprimary_education - 0.16679089719315 )**2;
   CLUS2vads [2] + ( Educationprimary_education - -0.03597002903085 )**2;
   CLUS2vads [3] + ( Educationprimary_education - -0.19892629030724 )**2;
   CLUS2vads [4] + ( Educationprimary_education - -0.02562589554878 )**2;
   CLUS2vads [5] + ( Educationprimary_education - -0.11924325812662 )**2;
end;
else _vqmvar + 0.19999999999999;
if not missing( Educationprofessional_educat ) then do;
   CLUS2vads [1] + ( Educationprofessional_educat - -0.0100572850297 )**2;
   CLUS2vads [2] + ( Educationprofessional_educat - 0.02477410655864 )**2;
   CLUS2vads [3] + ( Educationprofessional_educat - -0.17519457945226 )**2;
   CLUS2vads [4] + ( Educationprofessional_educat - 0.00260113998359 )**2;
   CLUS2vads [5] + ( Educationprofessional_educat - -0.00360524101496 )**2;
end;
else _vqmvar + 0.2;
if not missing( Educationsecondary_education ) then do;
   CLUS2vads [1] + ( Educationsecondary_education - -0.05312546960705 )**2;
   CLUS2vads [2] + ( Educationsecondary_education - 0.01102413106815 )**2;
   CLUS2vads [3] + ( Educationsecondary_education - -0.3660658600899 )**2;
   CLUS2vads [4] + ( Educationsecondary_education - 0.03179673525779 )**2;
   CLUS2vads [5] + ( Educationsecondary_education - 0.00658852972414 )**2;
end;
else _vqmvar + 0.19999999999999;
if not missing( Educationuniversity_educatio ) then do;
   CLUS2vads [1] + ( Educationuniversity_educatio - -0.07046958294991 )**2;
   CLUS2vads [2] + ( Educationuniversity_educatio - -0.00060214642377 )**2;
   CLUS2vads [3] + ( Educationuniversity_educatio - -0.29286621546649 )**2;
   CLUS2vads [4] + ( Educationuniversity_educatio - -0.01476733097357 )**2;
   CLUS2vads [5] + ( Educationuniversity_educatio - 0.09264164314716 )**2;
end;
else _vqmvar + 0.2;
if not missing( Marital_Statuesdivorced ) then do;
   CLUS2vads [1] + ( Marital_Statuesdivorced - -0.19705217264665 )**2;
   CLUS2vads [2] + ( Marital_Statuesdivorced - 1.61435228984102 )**2;
   CLUS2vads [3] + ( Marital_Statuesdivorced - -0.07641598645015 )**2;
   CLUS2vads [4] + ( Marital_Statuesdivorced - -0.20647508462643 )**2;
   CLUS2vads [5] + ( Marital_Statuesdivorced - -0.20647508462639 )**2;
end;
else _vqmvar + 0.33333333333333;
if not missing( Marital_Statuesmarried ) then do;
   CLUS2vads [1] + ( Marital_Statuesmarried - 0.40368137588562 )**2;
   CLUS2vads [2] + ( Marital_Statuesmarried - -0.72697986752957 )**2;
   CLUS2vads [3] + ( Marital_Statuesmarried - 0.28914957265552 )**2;
   CLUS2vads [4] + ( Marital_Statuesmarried - 0.458504479353 )**2;
   CLUS2vads [5] + ( Marital_Statuesmarried - -0.72697986752966 )**2;
end;
else _vqmvar + 0.33333333333333;
if not missing( Marital_Statuessingle ) then do;
   CLUS2vads [1] + ( Marital_Statuessingle - -0.30091828678171 )**2;
   CLUS2vads [2] + ( Marital_Statuessingle - -0.35412036666 )**2;
   CLUS2vads [3] + ( Marital_Statuessingle - -0.26159235259357 )**2;
   CLUS2vads [4] + ( Marital_Statuessingle - -0.35412036666002 )**2;
   CLUS2vads [5] + ( Marital_Statuessingle - 0.94127183026944 )**2;
end;
else _vqmvar + 0.33333333333333;
_vqnvar = 4 - _vqmvar;
if _vqnvar <= 9.0949470177293E-12 then do;
   _SEGMENT_ = .; Distance = .;
end;
else do;
   _SEGMENT_ = 1; Distance = CLUS2vads [1];
   _vqfzdst = Distance * 0.99999999999988; drop _vqfzdst;
   do _vqclus = 2 to 5;
      if CLUS2vads [_vqclus] < _vqfzdst then do;
         _SEGMENT_ = _vqclus; Distance = CLUS2vads [_vqclus];
         _vqfzdst = Distance * 0.99999999999988;
      end;
   end;
   Distance = sqrt(Distance * (4 / _vqnvar));
end;
CLUS2vlex :;

***************************************;
*** End Scoring Code from PROC DMVQ ***;
***************************************;
