*------------------------------------------------------------*
User:                20161277
Date:                September 25, 2020
Time:                18:32:24
Site:                10008783
Platform:            X64_DS08R2
Maintenance Release: 9.04.01M3P062415
EM Version:          14.1
* 
*------------------------------------------------------------*
* Training Log
Date:                September 25, 2020
Time:                18:32:22
*------------------------------------------------------------*
14714  proc freq data=EMWS1.FIMPORT3_VariableSet noprint;
14715  table ROLE*LEVEL/out=WORK.FIMPORT3META;
14716  run;
 
NOTE: There were 9 observations read from the data set EMWS1.FIMPORT3_VARIABLESET.
NOTE: The data set WORK.FIMPORT3META has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
14717  proc print data=WORK.FIMPORT3META label noobs;
14718  var ROLE LEVEL COUNT;
14719  label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
14720  title9 ' ';
14721  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
14722  run;
 
NOTE: There were 3 observations read from the data set WORK.FIMPORT3META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
14723  title10;
 
14724  %let EMEXCEPTIONSTRING=;
15047  *------------------------------------------------------------*;
15048  * FIMPORT3: Generation of macros and macro variables;
15049  * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
15050  *------------------------------------------------------------*;
 
15051  %let EMEXCEPTIONSTRING=;
15052  *------------------------------------------------------------*;
15053  * TRAIN: FIMPORT3;
15054  *------------------------------------------------------------*;
15055  %let EM_ACTION = TRAIN;
15056  %let syscc = 0;
15057  /* Fimport.source */
15058  %macro main;
15059        %if %upcase(&EM_ACTION) = CREATE %then %do;
15060           filename temp catalog 'sashelp.emsamp.Fimport_create.source';
15061           %include temp;
15062           filename temp;
15063           %create;
15064        %end;
15065        %else
15066        %if %upcase(&EM_ACTION) = TRAIN %then %do;
15067           filename temp catalog 'sashelp.emsamp.Fimport_train.source';
15068           %include temp;
15069           filename temp;
15070           %train;
15071        %end;
15072        %else
15073        %if %upcase(&EM_ACTION) = UPDATE %then %do;
15074           filename temp catalog 'sashelp.emsamp.Fimport_update.source';
15075           %include temp;
15076           filename temp;
15077           %update;
15078        %end;
15079        %else
15080        %if %upcase(&EM_ACTION) = PROPERTY %then %do;
15081           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
15082           %include temp;
15083           filename temp;
15084           %property;
15085        %end;
15086         %else
15087        %if %upcase(&EM_ACTION) = SCORE %then %do;
15088           filename temp catalog 'sashelp.emsamp.Fimport_score.source';
15089           %include temp;
15090           filename temp;
15091           %score;
15092        %end;
15093        %else
15094        %if %upcase(&EM_ACTION) = REPORT %then %do;
15095           filename temp catalog 'sashelp.emsamp.Fimport_report.source';
15096           %include temp;
15097           filename temp;
15098           %report;
15099        %end;
15100        %else
15101        %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
15102           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
15103           %include temp;
15104           filename temp;
15105           %openvariableset;
15106        %end;
15107        %else
15108        %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
15109           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
15110           %include temp;
15111           filename temp;
15112           %closevariableset;
15113        %end;
15114  %mend main;
15115  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_TRAIN.SOURCE.
15116 +%EM_GETNAME(key=USERIMPORTFILE, type=FILE, extension=txt);
15117 +%macro appendExt;
15118 +   data _null_;
15119 +      tempuif =  trim("&EM_USER_USERIMPORTFILE");
15120 +      rfile = reverse(tempuif);
15121 +      period = indexc(rfile,".");
15122 +      uif = substr(tempuif, 1, length(tempuif)- period+1);
15123 +      newuif = trim(uif)||trim("&EM_PROPERTY_FILETYPE");
15124 +      call symput("EM_USER_USERIMPORTFILE",%bquote(newuif));
15125 +   run;
15126 +%mend appendExt;
15128 +%macro getNobs(ds);
15129 + %global dset nobs;
15130 + %let dset=&ds;
15131 + %let dsid = %sysfunc(open(&dset));
15132 + %if &dsid %then %do;
15133 +      %let nobs =%sysfunc(attrn(&dsid,nobs));
15134 +      %let rc = %sysfunc(close(&dsid));
15135 +   %end;
15136 + %else %put open for data set &dset failed - %sysfunc(sysmsg());
15137 +%mend getNobs;
15138 +%macro keepordrop;
15139 +  proc contents data=work.importfile noprint
15140 +  out=work.importattrs;
15141 +  run;
15142 +  %getNobs(work.importattrs);
15143 +  data _null_;
15144 +    set  work.importattrs;
15145 +    call symput("varname"||left(_n_),name);
15146 +  run;
15148 +  %put nobs=&nobs  maxcols=&EM_PROPERTY_MAXCOLS;
15149 +  /* importattrs contains 1 observation for each VARIABLE in the data set. */
15150 +  %if &nobs > &EM_PROPERTY_MAXCOLS %then %do;
15151 +     %let diff = %eval(&nobs - &EM_PROPERTY_MAXCOLS);
15152 +     %put diff=&diff;
15153 +     %if %eval(&diff ge &EM_PROPERTY_MAXCOLS) %then %do;
15154 +         %let kORd = keep;
15155 +             %let start=1;
15156 +             %let end = &EM_PROPERTY_MAXCOLS;
15157 +       %end;
15158 +     %else %do;
15159 +         %let kORd = drop;
15160 +             %let start = &EM_PROPERTY_MAXCOLS + 1;
15161 +             %let end = &nobs;
15162 +       %end;
15163 +     data &em_user_data;
15164 +        set &em_user_data;
15165 +        &kORd
15166 +        %do i = &start %to &end;
15167 +            &&varname&i
15168 +         %end;
15169 +        ;
15170 +     run;
15171 +%end;
15172 +%mend keepordrop;
15173 +%macro dropformatvars;
15174 +   %put fmtcnt=&fmtcnt;
15175 +   data new;
15176 +     set work.importfile;
15177 +     %do i = 1 %to &fmtcnt;
15178 +       x1zy&i =put(&&varname&i,&&fmt&i);
15179 +     %end;
15180 +   run;
15181 +   data new;
15182 +     set new;
15183 +     drop
15184 +     %do i = 1 %to &fmtcnt;
15185 +     &&varname&i
15186 +     %end;
15187 +     ;
15188 +   run;
15189 +   proc datasets library=work nolist;
15190 +     modify new;
15191 +     %do i = 1 %to &fmtcnt;
15192 +     rename x1zy&i=&&varname&i;
15193 +     %end;
15194 +   run; quit;
15195 +   data work.importfile;
15196 +     set new;
15197 +   run;
15198 +%mend;
15200 +%macro procimport(out=);
15201 +   %if %upcase(&EM_PROPERTY_FILETYPE)=MDB %then %do;
15202 +      proc import table=%sysfunc(trim(&EM_PROPERTY_ACCESSTABLE))
15203 +         out=&out
15204 +         dbms = ACCESS
15205 +         replace;
15206 +         database="%trim(&_IFILENAME)"
15207 +   %end;
15208 +   %else %do;
15209 +       proc import datafile="%trim(&_IFILENAME)"
15210 +          out=&out
15212 +      %put filetype=*&EM_PROPERTY_FILETYPE.*;
15213 +      %put delimiter=*&EM_PROPERTY_DELIMITER.*;
15214 +      %if %upcase(&EM_PROPERTY_FILETYPE) ^= TXT %then %do;
15215 +         dbms=&EM_PROPERTY_FILETYPE
15216 +      %end;
15217 +      %else %do;
15218 +         dbms=TAB
15219 +      %end;
15220 +      /* Work around for the following defects:S0560899 and S0560009.   */
15221 +      %let sasEnv=%sysfunc(getlocenv());
15222 +      %if %upcase(&EM_PROPERTY_FILETYPE) = XLS and %upcase(&sasEnv) ^= SBCS %then %do;
15223 +         dbms=EXCEL
15224 +      %end;
15226 +      replace;
15227 +      %if %substr(%upcase(&EM_PROPERTY_FILETYPE),1,2)=WK | %upcase(&EM_PROPERTY_FILETYPE)=XLS
15228 +       | %upcase(&EM_PROPERTY_FILETYPE)=DLM | %upcase(&EM_PROPERTY_FILETYPE)=CSV
15229 +       | %upcase(&EM_PROPERTY_FILETYPE)=TAB | %upcase(&EM_PROPERTY_FILETYPE)=TXT %then %do;
15230 +        %if %length(&EM_PROPERTY_NAMEROW) > 0 %then %do;
15231 +            getnames=&EM_PROPERTY_NAMEROW;
15232 +        %end;
15233 +      %end;
15234 +      %if %upcase(&EM_PROPERTY_FILETYPE)=CSV | %upcase(&EM_PROPERTY_FILETYPE)=DLM |
15235 +          %upcase(&EM_PROPERTY_FILETYPE=TXT)  %then %do;
15236 +         %if (%length(%trim(%bquote(&EM_PROPERTY_DELIMITER))) > 0) %then %do;
15237 +            %if "%upcase(&EM_PROPERTY_DELIMITER)"="SP" %then %do;
15238 +               delimiter=" ";
15239 +            %end;
15240 +            %else %if "%upcase(&EM_PROPERTY_DELIMITER)"="TAB" %then %do;
15241 +               /* Do not specifiy a delimiter */
15242 +            %end;
15243 +            %else %do;
15244 +               delimiter="&EM_PROPERTY_DELIMITER";
15245 +            %end;
15246 +         %end;
15247 +         %if %eval(&EM_PROPERTY_SKIPROWS > 0) %then %do;
15248 +            datarow=&EM_PROPERTY_SKIPROWS;
15249 +            /* Guessingrows must be >= skiprows */
15250 +            %if %eval(&EM_PROPERTY_GUESSROWS < &EM_PROPERTY_SKIPROWS ) %then %do;
15251 +              %let EM_PROPERTY_GUESSROWS = &EM_PROPERTY_SKIPROWS;
15252 +            %end;
15253 +         %end;
15254 +         %if %eval(&EM_PROPERTY_GUESSROWS > 0) %then %do;
15255 +            guessingrows=&EM_PROPERTY_GUESSROWS;
15256 +         %end;
15257 +       %end;
15258 +      %if %upcase(&EM_PROPERTY_FILETYPE)=DTA | %upcase(&EM_PROPERTY_FILETYPE)=JMP
15259 +                 | %upcase(&EM_PROPERTY_FILETYPE)=SAV %then %do;
15260 +            FMTLIB = work.formats;
15261 +      %end;
15262 +   %end;
15263 +   run;
15264 +%mend procimport;
15266 +%macro train;
15268 +   %let vvnString = %sysfunc(getoption(validvarname));
15270 +   %em_getname(key=DATA,           type=DATA);
15271 +   %em_getname(key=EMCMETADEFAULT, type=DATA);
15272 +   %em_getname(key=EMTMETADEFAULT, type=DATA);
15273 +   %em_getname(key=EMSTATDEFAULT, type=DATA);
15275 +   %appendExt;
15277 +   %let _IFILENAME = %nrbquote(%trim(&EM_PROPERTY_IFILENAME));
15278 +   %if %upcase(&EM_PROPERTY_IMPORTTYPE) = LOCAL %then %do;
15279 +       %if %nrbquote(%sysfunc(fileexist(&EM_USER_USERIMPORTFILE))) %then
15280 +           %let _IFILENAME = %nrbquote(&EM_USER_USERIMPORTFILE);
15281 +   %end;
15283 +   %if ^%sysfunc(fileexist(%nrbquote(&_IFILENAME))) %then %do;
15284 +       %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTRAININGCODEFILE,%nrbquote(&_IFILENAME);
15285 +       %goto endtrain;
15286 +   %end;
15288 +   options validvarname=ANY;
15289 +   %procimport(out=work.importfile);
15291 +   %if %upcase(&EM_PROPERTY_FILETYPE) = DTA | %upcase(&EM_PROPERTY_FILETYPE) = JMP
15292 +              | %upcase(&EM_PROPERTY_FILETYPE)=SAV %then %do;
15293 +      %global fmtcnt;
15294 +      %let fmtcnt=0;
15295 +      proc contents data=work.importfile out=work.impattrs noprint;
15296 +      run;
15297 +      data _null_;
15298 +        set work.impattrs;
15299 +        if _n_=1 then i=0;
15300 +        if substr(format,1,1) ^= "$" and length(trim(format)) > 1 then do;
15301 +           i = i+1;
15302 +           varname = substr(name, 1, length(name));
15303 +           call symput("fmt"||left(i), trim(format)||".");
15304 +           call symput("varname"||left(i), varname);
15305 +           call symput("fmtcnt",left(i));
15306 +      end;
15307 +      retain i;
15308 +     run;
15309 +    %if &fmtcnt > 0 %then %do;
15310 +       %dropformatvars;
15311 +    %end;
15312 +    proc datasets lib=work memtype=data nolist;
15313 +        modify importfile;
15314 +        attrib _all_ format=;
15315 +    run;
15316 +    quit;
15317 +   %end;
15319 +   %let _fimportObs  = 0;
15320 +   %let _fimportVars = 0;
15321 +   %if %sysfunc(exist(work.importFile)) %then %do;
15322 +       %let dsid = %sysfunc(open(work.importFile));
15323 +       %if &dsid %then %do;
15324 +           %let _fimportObs  = %sysfunc(attrn(&dsid, NOBS));
15325 +           %let _fimportVars = %sysfunc(attrn(&dsid, NVARS));
15326 +       %let dsid = %sysfunc(close(&dsid));
15327 +       %end;
15328 +   %end;
15330 +   %if ^&_fimportObs %then %do;
15331 +       %let EMEXCEPTIONSTRING = exception.server.EMTOOL.FILE_NO_OBS;
15332 +       %goto endtrain;
15333 +   %end;
15334 +   %if ^&_fimportVars %then %do;
15335 +       %let EMEXCEPTIONSTRING = exception.server.EMTOOL.FILE_NO_VARS;
15336 +       %goto endtrain;
15337 +   %end;
15339 +   data &em_user_data;
15340 +      set work.importfile(obs=&EM_PROPERTY_MAXROWS);
15341 +   run;
15342 +   %keepordrop;
15344 +   %em_getname(key=EMSTAT,     type=DATA);
15346 +   proc datasets lib=&em_lib nolist;
15347 +      delete &em_nodeid._EMSTATDEFAULT &em_nodeid._EMINFO;
15348 +   run;
15350 +   %if "&em_property_advancedadvisor" eq "Y" %then %do;
15351 +        %EmAdviseColumns(&em_user_data, applyIntervalLevelLowerLimit=Y,
15352 +            intervalLevelLowerLimit=20, applyMaxPercentMissing=Y,
15353 +            maxPercentMissing=50, applyMaxClassLevels=Y,
15354 +            maxClassLevels=20, identifyEmptyColumns=Y,
15355 +            outdata=&em_user_EMCMETADEFAULT,
15356 +            computeStat=Y, statisticData=&em_user_EMSTATDEFAULT);
15358 +        data &em_user_emcmetadefault;
15359 +           set &em_user_emcmetadefault;
15360 +           drop nlevel pctmiss min max mean std skewness kurtosis;
15361 +        run;
15363 +        data &em_data_eminfo;
15364 +           length TARGET KEY $32  DATA $43;
15365 +           TARGET=""; KEY="STATS"; DATA="&em_user_emstatdefault"; output;
15366 +        run;
15368 +        %let EM_META_ADVISOR=ADVANCED;
15370 +   %end;
15371 +   %else %do;
15372 +       %EmAdviseColumns(&em_user_data, applyIntervalLevelLowerLimit=N,
15373 +            applyMaxPercentMissing=N, applyMaxClassLevels=N,
15374 +            identifyEmptyColumns=N,   maxLevelDetection=0,
15375 +            outdata=&em_user_EMCMETADEFAULT, computeStat=N, statisticData=WORK.STATISTIC);
15377 +            %if "&em_property_summarize" eq "Y" %then %do;
15378 +                %em_getname(key=EMSTAT,  type=DATA);
15379 +                data &em_data_eminfo;
15380 +                   length TARGET KEY $32  DATA $43;
15381 +                   TARGET=""; KEY="STATS"; DATA="&em_user_emstat"; output;
15382 +                run;
15383 +            %end;
15385 +        %let EM_META_ADVISOR=BASIC;
15387 +   %end;
15389 +   %em_getname(key=VVNLABEL, type=FILE, extension=sas);
15390 +   data _null_;
15391 +      fname = '_text';
15392 +      rc=filename(fname, "&em_user_vvnlabel");
15393 +      if ^rc and fexist(fname) then
15394 +         rc=fdelete(fname);
15395 +     rc=filename(fname);
15396 +   run;
15399 +   /* Validvarname Case */
15400 +   %let newNameFlag = 0;
15401 +   %if %sysfunc(exist(&em_user_EMCMETADEFAULT)) %then %do;
15402 +       %let dsid = %sysfunc(open(&em_user_EMCMETADEFAULT));
15403 +        %if &dsid %then %do;
15404 +            %let newNameFlag = %sysfunc(varnum(&dsid, NEWNAME));
15405 +            %let dsid = %sysfunc(close(&dsid));
15406 +       %end;
15407 +   %end;
15409 +   %if %sysevalf(&newNameFlag>0) %then %do;
15410 +       proc contents data=work.importfile noprint out=work._any(keep=VARNUM NAME LABEL);
15411 +       run;
15412 +       proc sort data=work._any; by VARNUM; run; quit;
15414 +       options validvarname=V7;
15416 +       %procimport(out=work.importfile2);
15418 +       options validvarname=ANY;
15420 +       proc contents data=work.importfile2 noprint out=work._v7(rename=(NAME=V7NAME) keep=VARNUM NAME LABEL);
15421 +       run;
15422 +       proc sort data=work._v7; by varnum; run; quit;
15424 +       filename _FI "&em_user_vvnlabel";
15425 +       data work._names;
15426 +          length string $200;
15427 +          merge work._v7 work._any;
15428 +          by VARNUM;
15429 +          file _FI;
15430 +          if V7NAME ne NAME then do;
15431 +             string = trim(V7NAME)!!'= "'!!tranwrd(trim(NAME), '"', '""')!!'"n;';
15432 +             put string;
15433 +             if LABEL eq '' then do;
15434 +                string = 'Label '!!trim(V7NAME)!!"='"!!tranwrd(trim(NAME), "'", "''")!!"';";
15435 +                put string;
15436 +             end;
15437 +             string='drop "'!!tranwrd(trim(NAME), '"', '""')!!'"n;';
15438 +             put string;
15439 +          end;
15440 +          drop string;
15441 +       run;
15442 +       data &em_user_data;
15443 +          set &em_user_data;
15444 +          %if %sysfunc(fileexist(%nrbquote(&em_user_vvnlabel))) %then %do;
15445 +              filename _FI "&em_user_vvnlabel";
15446 +              %inc _FI;
15447 +             filename _FI;
15448 +          %end;
15449 +       run;
15451 +       proc sort data=&em_user_EMCMETADEFAULT; by NAME; run;
15452 +       proc sort data=work._names;             by NAME; run;
15454 +       data &em_user_EMCMETADEFAULT;
15455 +         merge  &em_user_EMCMETADEFAULT _names;
15456 +         by NAME;
15457 +         length DROP $1;
15458 +         DROP='N';
15459 +         if NEWNAME ne NAME then do;
15460 +            if LABEL eq '' then do;
15461 +               LABEL = NAME;
15462 +            end;
15463 +            NAME=V7NAME;
15464 +         end;
15465 +         drop NEWNAME V7NAME VARNUM;
15466 +       run;
15468 +       proc datasets lib=work nolist;
15469 +          delete _any _v7 _names importfile2;
15470 +       run;
15471 +       quit;
15473 +   %end;
15474 +   %else %do;
15475 +       data &em_user_EMCMETADEFAULT;
15476 +          set &em_user_EMCMETADEFAULT;
15477 +          length DROP $1;
15478 +          DROP='N';
15479 +       run;
15480 +   %end;
15482 +    %EmAdviseTable(&em_user_data, outdata=&em_user_EMTMETADEFAULT, newdataflag=Y);
15484 +   data _temp;
15485 +      set &em_user_emtmetadefault(rename=(ROLE=PORT MEMNAME=DATASET CRDATE=MODTIME));
15486 +      keep PORT LIBNAME DATASET MODTIME COLUMNMETA COLUMNMETAMODTIME NOBS;
15487 +      PORT='DATA'; COLUMNMETA="&em_nodeid._EMCMETADEFAULT";
15488 +      COLUMNMETAMODTIME=MODTIME;
15489 +   run;
15490 +   proc sort data=&em_data_importset;
15491 +      by PORT;
15492 +   run;
15493 +   data &em_data_importset;
15494 +      merge &em_data_importset _temp;
15495 +      by PORT;
15496 +      if PORT='DATA' then ROLE="&em_property_role";
15497 +   run;
15499 +    %em_getname(key=VARIABLESETDELTA, type=FILE, extension=txt);
15501 +    %if %sysfunc(exist(&em_user_emcmetadefault)) %then %do;
15502 +        %if %sysfunc(fileexist(&em_user_variablesetdelta)) %then %do;
15503 +            filename x "&em_user_variablesetdelta";
15504 +            data &em_data_variableset;
15505 +               set &em_user_emcmetadefault;
15506 +               %inc X;
15507 +            run;
15508 +            filename x;
15509 +        %end;
15510 +        %else %do;
15511 +            data &em_data_variableset;
15512 +               set &em_user_emcmetadefault;
15513 +            run;
15514 +        %end;
15515 +    %end;
15517 +   %if %sysfunc(exist(&em_data_variableset)) and %sysfunc(exist(&em_user_emcmetadefault)) %then %do;
15518 +      proc compare compare=&em_data_variableset base=&em_user_emcmetadefault
15519 +         noprint outnoequal outbase outcomp out=_DiffMeta noprint;
15520 +         id NAME;
15521 +      run;
15523 +         filename x1 "&EM_FILE_CDELTA_TRAIN";
15524 +         data _null_;
15525 +            length string $200;
15526 +            set _DiffMeta end=eof;
15527 +            where _type_='COMPARE';
15528 +            file x1;
15529 +            string = 'if NAME="'!!strip(NAME)!!'" then do;';
15530 +            put string;
15531 +            string = '   ROLE="'!!strip(ROLE)!!'";';
15532 +            put string;
15533 +            string=  '   LEVEL="'!!strip(LEVEL)!!'";';
15534 +            put string;
15535 +            string = '   ORDER="'!!strip(ORDER)!!'";';
15536 +            put string;
15537 +            put 'end;';
15538 +            if drop='Y' then do;
15539 +               string='if NAME="'!!strip(NAME)!!'" then delete;';
15540 +               put string;
15541 +            end;
15542 +            if eof then
15543 +               put 'drop DROP;';
15544 +         run;
15546 +         %em_getname(key=DELTACODE,      type=FILE, extension=txt);
15547 +         filename x2 "&em_user_deltacode";
15548 +         %em_copyfile(infref=x1, outfref=x2);
15549 +         filename x1;
15550 +         filename x2;
15552 +         %em_getname(key=VARIABLESETDELTA, type=FILE, extension=txt);
15553 +         filename x "&em_user_variablesetdelta";
15554 +         data _null_;
15555 +            length string $200;
15556 +            set _DiffMeta end=eof;
15557 +            where _type_='COMPARE';
15558 +            file x;
15559 +            string = 'if NAME="'!!strip(NAME)!!'" then do;';
15560 +            put string;
15561 +            string = '   ROLE="'!!strip(ROLE)!!'";';
15562 +            put string;
15563 +            string=  '   LEVEL="'!!strip(LEVEL)!!'";';
15564 +            put string;
15565 +            string = '   ORDER="'!!strip(ORDER)!!'";';
15566 +            put string;
15567 +            string = '   DROP="'!!strip(DROP)!!'";';
15568 +            put string;
15569 +            put 'end;';
15570 +         run;
15571 +         filename x;
15572 +       proc datasets lib=work nolist;
15573 +          delete _DiffMeta;
15574 +       run;
15576 +       data &em_data_exportset;
15577 +          set &em_data_exportset;
15578 +          if NODEPORT='TRAIN' then do;
15579 +             ROLE="&em_property_role";
15580 +             COLUMNMETAMODTIME=datetime();
15581 +             MODTIME=datetime();
15582 +             DATASET="&em_nodeid._train";
15583 +             COLUMNMETA="&em_nodeid._CMeta_TRAIN";
15584 +             DELTACODE="CDelta_TRAIN";
15585 +             APPLYDELTA='Y';
15586 +             EXPORT='Y';
15587 +             NEEDUPDATE='Y';
15589 +            %if "&em_property_advancedadvisor" eq "Y" %then %do;
15590 +                EMINFO="&em_data_eminfo";
15591 +                EMINFOMODTIME=datetime();
15592 +            %end;
15593 +            %else %do;
15594 +                EMINFO='';
15595 +                EMINFOMODTIME=.;
15596 +            %end;
15597 +          end;
15598 +       run;
15599 +   %end;
15601 +  proc contents data=&em_user_data;
15602 +  run;
15603 +  proc datasets library=work nolist;
15604 +   delete importfile importattrs new;
15605 +   quit;
15606 +  run;
15608 +  /* Reset VALIDVARNAME to original settings */
15609 +  options validvarname=&vvnString;
15611 +  %endtrain:
15612 +%mend train;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
filetype=*csv*
delimiter=*,*
 
15613   /**********************************************************************
15614   *   PRODUCT:   SAS
15615   *   VERSION:   9.4
15616   *   CREATOR:   External File Interface
15617   *   DATE:      25SEP20
15618   *   DESC:      Generated SAS Datastep Code
15619   *   TEMPLATE SOURCE:  (None Specified.)
15620   ***********************************************************************/
15621      data WORK.IMPORTFILE    ;
15622      %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
15623      infile 'C:\Users\20161277\Documents\CA assign 2 data\20161277_CAassignment2\Workspaces\EMWS1\FIMPORT3\USERIMPORTFILE.csv' delimiter = ',' MISSOVER DSD lrecl=32767 firstobs=2 ;
15624         informat Age best32. ;
15625         informat Career $14. ;
15626         informat Marital_Statues $8. ;
15627         informat Education $22. ;
15628         informat Mortage $3. ;
15629         informat Personal_Loan $3. ;
15630         informat Contact_Type $9. ;
15631         informat Number_of_Contacts best32. ;
15632         informat Subscribed $3. ;
15633         format Age best12. ;
15634         format Career $14. ;
15635         format Marital_Statues $8. ;
15636         format Education $22. ;
15637         format Mortage $3. ;
15638         format Personal_Loan $3. ;
15639         format Contact_Type $9. ;
15640         format Number_of_Contacts best12. ;
15641         format Subscribed $3. ;
15642      input
15643                  Age
15644                  Career $
15645                  Marital_Statues $
15646                  Education $
15647                  Mortage $
15648                  Personal_Loan $
15649                  Contact_Type $
15650                  Number_of_Contacts
15651                  Subscribed $
15652      ;
15653      if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
15654      run;
 
NOTE: The infile 'C:\Users\20161277\Documents\CA assign 2 data\20161277_CAassignment2\Workspaces\EMWS1\FIMPORT3\USERIMPORTFILE.csv' is:
      Filename=C:\Users\20161277\Documents\CA assign 2 data\20161277_CAassignment2\Workspaces\EMWS1\FIMPORT3\USERIMPORTFILE.csv,
      RECFM=V,LRECL=32767,File Size (bytes)=2503093,
      Last Modified=25Sep2020:18:31:17,
      Create Time=25Sep2020:18:31:05
 
NOTE: 38245 records were read from the infile 'C:\Users\20161277\Documents\CA assign 2 data\20161277_CAassignment2\Workspaces\EMWS1\FIMPORT3\USERIMPORTFILE.csv'.
      The minimum record length was 50.
      The maximum record length was 73.
NOTE: The data set WORK.IMPORTFILE has 38245 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
38245 rows created in WORK.IMPORTFILE from C:\Users\20161277\Documents\CA assign 2 data\20161277_CAassignment2\Workspaces\EMWS1\FIMPORT3\USERIMPORTFILE.csv.
 
 
 
NOTE: WORK.IMPORTFILE data set was successfully created.
NOTE: The data set WORK.IMPORTFILE has 38245 observations and 9 variables.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.19 seconds
      cpu time            0.20 seconds
 
 
 
NOTE: There were 38245 observations read from the data set WORK.IMPORTFILE.
NOTE: The data set EMWS1.FIMPORT3_DATA has 38245 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The data set WORK.IMPORTATTRS has 9 observations and 41 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      23:137
NOTE: There were 9 observations read from the data set WORK.IMPORTATTRS.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
nobs=9  maxcols=10000
 
NOTE: The file EMWS1.FIMPORT3_EMSTATDEFAULT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.FIMPORT3_EMINFO (memtype=DATA) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
15655  %let SYSCC = 0;
15656  %let _dsidTable = 0;
15657  %let _engineTable =;
15658  data _null_;
15659  dsid = open('EMWS1.FIMPORT3_DATA');
15660  call symput('_dsidTable', strip(put(dsid, best.)));
15661  if dsid then do;
15662  call symput('_engineTable', attrc(dsid, 'ENGINE'));
15663  dsid = close(dsid);
15664  end;
15665  run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
15666  options fmterr;
15667  data _metaTestView;
15668  set EMWS1.FIMPORT3_DATA;
15669  if _N_=1 then do;
15670  output;
15671  stop;
15672  end;
15673  run;
 
NOTE: There were 1 observations read from the data set EMWS1.FIMPORT3_DATA.
NOTE: The data set WORK._METATESTVIEW has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
15674  proc contents data=EMWS1.FIMPORT3_DATA
15675  out=WORK.M0M5MLGL noprint;
15676  run;
 
NOTE: The data set WORK.M0M5MLGL has 9 observations and 41 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15677  data WORK.M0M5MLGL;
15678  length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
15679  label NAME =;
15680  set WORK.M0M5MLGL(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
15681  if itype = 1 then type = 'N';
15682  else type = 'C';
15683  if formatl > 0 then do;
15684  if format ne '' then do;
15685  if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
15686  else format = strip(format)!!strip(put(formatl, best12.))!!'.';
15687  end;
15688  else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
15689  end;
15690  else if format ne '' then format = strip(format)!!'.';
15691  if informl > 0 then do;
15692  if informat ne ' ' then do;
15693  if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
15694  else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
15695  end;
15696  else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
15697  end;
15698  else if informat ne '' then informat = strip(informat)!!'.';
15699  if idxusage = 'NONE' then index ="N";
15700  else index = "Y";
15701  indextype = idxusage;
15702  drop idxusage itype formatl formatd informl informd;
15703  run;
 
NOTE: There were 9 observations read from the data set WORK.M0M5MLGL.
NOTE: The data set WORK.M0M5MLGL has 9 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
15704  data WORK.M0M5MLGL;
15705  length UNAME $64;
15706  set WORK.M0M5MLGL;
15707  UNAME = upcase(NAME);
15708  run;
 
NOTE: There were 9 observations read from the data set WORK.M0M5MLGL.
NOTE: The data set WORK.M0M5MLGL has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15712  data WORK.M0Z57_QK;
15713  drop UNAME;
15714  set WORK.M0Z57_QK;
15715  run;
 
NOTE: There were 9 observations read from the data set WORK.M0Z57_QK.
NOTE: The data set WORK.M0Z57_QK has 9 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.18 seconds
      cpu time            0.12 seconds
 
 
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 9 observations read from the data set EMWS1.FIMPORT3_EMCMETADEFAULT.
NOTE: The data set EMWS1.FIMPORT3_EMCMETADEFAULT has 9 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
15966  %let SYSCC = 0;
15967  data EMWS1.FIMPORT3_EMTMETADEFAULT;
15968  length LIBNAME $8;
15969  LIBNAME = "EMWS1";
15970  run;
 
NOTE: The data set EMWS1.FIMPORT3_EMTMETADEFAULT has 1 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS1.FIMPORT3_EMTMETADEFAULT.
NOTE: The data set WORK._TEMP has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS1.FIMPORT3_IMPORTSET.
NOTE: The data set EMWS1.FIMPORT3_IMPORTSET has 15 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS1.FIMPORT3_IMPORTSET.
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: The data set EMWS1.FIMPORT3_IMPORTSET has 15 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file X is file C:\Users\20161277\Documents\CA assign 2 data\20161277_CAassignment2\Workspaces\EMWS1\FIMPORT3\VARIABLESETDELTA.txt.
15999 +if NAME="Subscribed" then do;
16000 +ROLE="TARGET";
16001 +LEVEL="NOMINAL";
16002 +ORDER="";
16003 +DROP="N";
16004 +end;
NOTE: %INCLUDE (level 1) ending.
 
NOTE: There were 9 observations read from the data set EMWS1.FIMPORT3_EMCMETADEFAULT.
NOTE: The data set EMWS1.FIMPORT3_VARIABLESET has 9 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: Fileref X has been deassigned.
 
NOTE: There were 9 observations read from the data set EMWS1.FIMPORT3_VARIABLESET.
NOTE: There were 9 observations read from the data set EMWS1.FIMPORT3_EMCMETADEFAULT.
NOTE: The data set WORK._DIFFMETA has 2 observations and 23 variables.
NOTE: PROCEDURE COMPARE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file X1 is:
      Filename=C:\Users\20161277\Documents\CA assign 2 data\20161277_CAassignment2\Workspaces\EMWS1\FIMPORT3\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=25Sep2020:18:32:23,
      Create Time=25Sep2020:18:21:05
 
NOTE: 6 records were written to the file X1.
      The minimum record length was 4.
      The maximum record length was 29.
NOTE: There were 1 observations read from the data set WORK._DIFFMETA.
      WHERE _type_='COMPARE';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file X2 is:
      Filename=C:\Users\20161277\Documents\CA assign 2 data\20161277_CAassignment2\Workspaces\EMWS1\FIMPORT3\DELTACODE.txt,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=25Sep2020:18:32:23,
      Create Time=25Sep2020:18:21:06
 
NOTE: 6 records were written to the file X2.
      The minimum record length was 4.
      The maximum record length was 29.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref X1 has been deassigned.
NOTE: Fileref X2 has been deassigned.
 
NOTE: The file X is:
      Filename=C:\Users\20161277\Documents\CA assign 2 data\20161277_CAassignment2\Workspaces\EMWS1\FIMPORT3\VARIABLESETDELTA.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=25Sep2020:18:32:23,
      Create Time=25Sep2020:18:21:06
 
NOTE: 6 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 29.
NOTE: There were 1 observations read from the data set WORK._DIFFMETA.
      WHERE _type_='COMPARE';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: Fileref X has been deassigned.
 
NOTE: Deleting WORK._DIFFMETA (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS1.FIMPORT3_EXPORTSET.
NOTE: The data set EMWS1.FIMPORT3_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
NOTE: The PROCEDURE CONTENTS printed page 2.
 
 
NOTE: The file WORK.NEW (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.IMPORTFILE (memtype=DATA).
NOTE: Deleting WORK.IMPORTATTRS (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
16005  *------------------------------------------------------------*;
16006  * End TRAIN: FIMPORT3;
16007  *------------------------------------------------------------*;
 
16008  *------------------------------------------------------------*;
16009  * Close any missing semi colons;
16010  *------------------------------------------------------------*;
16011  ;
16012  ;
16013  ;
16014  ;
16015  quit;
16016  *------------------------------------------------------------*;
16017  * Close any unbalanced quotes;
16018  *------------------------------------------------------------*;
16019  /*; *"; *'; */
16020  ;
16021  run;
16022  quit;
16023  /* Reset EM Options */
16024  options formchar="|----|+|---+=|-/\<>*";
16025  options nocenter ls=256 ps=10000;
16026  goptions reset=all device=GIF NODISPLAY;
 
*------------------------------------------------------------*
* Score Log
Date:                September 25, 2020
Time:                18:32:24
*------------------------------------------------------------*
16128  %let EMEXCEPTIONSTRING=;
16129  *------------------------------------------------------------*;
16130  * SCORE: FIMPORT3;
16131  *------------------------------------------------------------*;
16132  %let EM_ACTION = SCORE;
16133  %let syscc = 0;
16134  /* Fimport.source */
16135  %macro main;
16136        %if %upcase(&EM_ACTION) = CREATE %then %do;
16137           filename temp catalog 'sashelp.emsamp.Fimport_create.source';
16138           %include temp;
16139           filename temp;
16140           %create;
16141        %end;
16142        %else
16143        %if %upcase(&EM_ACTION) = TRAIN %then %do;
16144           filename temp catalog 'sashelp.emsamp.Fimport_train.source';
16145           %include temp;
16146           filename temp;
16147           %train;
16148        %end;
16149        %else
16150        %if %upcase(&EM_ACTION) = UPDATE %then %do;
16151           filename temp catalog 'sashelp.emsamp.Fimport_update.source';
16152           %include temp;
16153           filename temp;
16154           %update;
16155        %end;
16156        %else
16157        %if %upcase(&EM_ACTION) = PROPERTY %then %do;
16158           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16159           %include temp;
16160           filename temp;
16161           %property;
16162        %end;
16163         %else
16164        %if %upcase(&EM_ACTION) = SCORE %then %do;
16165           filename temp catalog 'sashelp.emsamp.Fimport_score.source';
16166           %include temp;
16167           filename temp;
16168           %score;
16169        %end;
16170        %else
16171        %if %upcase(&EM_ACTION) = REPORT %then %do;
16172           filename temp catalog 'sashelp.emsamp.Fimport_report.source';
16173           %include temp;
16174           filename temp;
16175           %report;
16176        %end;
16177        %else
16178        %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
16179           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16180           %include temp;
16181           filename temp;
16182           %openvariableset;
16183        %end;
16184        %else
16185        %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
16186           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16187           %include temp;
16188           filename temp;
16189           %closevariableset;
16190        %end;
16191  %mend main;
16192  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_SCORE.SOURCE.
16193 +%macro score;
16194 +
16195 +   filename x "&EM_NODEDIR.&EM_DSEP._updatePath.st";
16196 +   data _null_;
16197 +      file x;
16198 +      put ' ';
16199 +   run;
16200 +   filename x;
16201 +
16202 +   %em_getname(key=DATA, type=DATA);
16203 +   %if %sysfunc(exist(&em_user_data)) %then %do;
16204 +       data &em_export_train / view=&em_export_train;
16205 +          set &em_user_data;
16206 +       run;
16207 +   %end;
16208 +
16209 +%mend score;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The file X is:
      Filename=C:\Users\20161277\Documents\CA assign 2 data\20161277_CAassignment2\Workspaces\EMWS1\FIMPORT3\_updatePath.st,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=25Sep2020:18:32:23,
      Create Time=25Sep2020:18:31:50
 
NOTE: 1 record was written to the file X.
      The minimum record length was 1.
      The maximum record length was 1.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref X has been deassigned.
 
NOTE: DATA STEP view saved on file EMWS1.FIMPORT3_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
16210  *------------------------------------------------------------*;
16211  * End SCORE: FIMPORT3;
16212  *------------------------------------------------------------*;
 
16214  *------------------------------------------------------------*;
16215  * FIMPORT3: Computing metadata for TRAIN data;
16216  *------------------------------------------------------------*;
 
NOTE: View EMWS1.FIMPORT3_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
NOTE: View EMWS1.FIMPORT3_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
*------------------------------------------------------------*
* Report Log
Date:                September 25, 2020
Time:                18:32:24
*------------------------------------------------------------*
16583  %let EMEXCEPTIONSTRING=;
16584  *------------------------------------------------------------*;
16585  * REPORT: FIMPORT3;
16586  *------------------------------------------------------------*;
16587  %let EM_ACTION = REPORT;
16588  %let syscc = 0;
16589  /* Fimport.source */
16590  %macro main;
16591        %if %upcase(&EM_ACTION) = CREATE %then %do;
16592           filename temp catalog 'sashelp.emsamp.Fimport_create.source';
16593           %include temp;
16594           filename temp;
16595           %create;
16596        %end;
16597        %else
16598        %if %upcase(&EM_ACTION) = TRAIN %then %do;
16599           filename temp catalog 'sashelp.emsamp.Fimport_train.source';
16600           %include temp;
16601           filename temp;
16602           %train;
16603        %end;
16604        %else
16605        %if %upcase(&EM_ACTION) = UPDATE %then %do;
16606           filename temp catalog 'sashelp.emsamp.Fimport_update.source';
16607           %include temp;
16608           filename temp;
16609           %update;
16610        %end;
16611        %else
16612        %if %upcase(&EM_ACTION) = PROPERTY %then %do;
16613           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16614           %include temp;
16615           filename temp;
16616           %property;
16617        %end;
16618         %else
16619        %if %upcase(&EM_ACTION) = SCORE %then %do;
16620           filename temp catalog 'sashelp.emsamp.Fimport_score.source';
16621           %include temp;
16622           filename temp;
16623           %score;
16624        %end;
16625        %else
16626        %if %upcase(&EM_ACTION) = REPORT %then %do;
16627           filename temp catalog 'sashelp.emsamp.Fimport_report.source';
16628           %include temp;
16629           filename temp;
16630           %report;
16631        %end;
16632        %else
16633        %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
16634           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16635           %include temp;
16636           filename temp;
16637           %openvariableset;
16638        %end;
16639        %else
16640        %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
16641           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16642           %include temp;
16643           filename temp;
16644           %closevariableset;
16645        %end;
16646  %mend main;
16647  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_REPORT.SOURCE.
16648 +%macro report;
16649 +    %em_getname(key=EMSTAT,     type=DATA);
16650 +    %em_getname(key=EMINFO,     type=DATA);
16651 +    %em_getname(key=CLASS,      type=DATA);
16652 +    %em_getname(key=INTERVAL,   type=DATA);
16653 +
16654 +    %em_REPORT(key=EMSTAT,   viewtype=DATA, description=EMSTAT, block=Report, autodisplay=Y);
16655 +    %em_REPORT(key=INTERVAL, viewtype=LATTICE, LATTICETYPE=HISTOGRAM, LATTICEX=VARIABLE, DISCRETEX=Y, X=VALUE,FREQ=PERCENT,block=Report, description=INTERVALTARGET, autodisplay=N);
16656 +    %em_REPORT(key=CLASS, viewtype=LATTICE, LATTICEtype=BAR, LATTICEX=VARIABLE, X=VALUE,FREQ=PERCENT, block=Report, description=CLASSTARGET, autodisplay=Y);
16657 +
16658 +    %if &em_property_summarize eq Y %then %do;
16659 +        filename temp catalog 'sashelp.emmeta.emadvisestatistics.source';
16660 +        %include temp;
16661 +        filename temp;
16662 +
16663 +        data work.tempmeta;
16664 +           set &em_lib..&em_nodeid._CMETA_TRAIN;
16665 +           if ROLE='TARGET' and LEVEL ne 'INTERVAL' then output;
16666 +         run;
16667 +
16668 +        %class_profile(DATA=&em_export_train, OUTPUT=&em_user_class, VARS=,
16669 +                      METADATA=tempmeta, STAT=_STAT, FREQ=);
16670 +
16671 +         data work.tempmeta;
16672 +           set &em_lib..&em_nodeid._CMETA_TRAIN;
16673 +            if ROLE='TARGET' and LEVEL eq 'INTERVAL' then output;
16674 +         run;
16675 +         %var_profile(DATA=&em_export_train, OUTPUT=&em_user_INTERVAL, VARS=, METADATA=tempmeta, COMPUTESTAT=Y, STAT=_STAT, FREQ=,
16676 +                   BINDATA=, BIN=Y, NUMBARS=8, MINMAX=N);
16677 +
16678 +        data work.tempmeta;
16679 +           set &em_lib..&em_nodeid._CMETA_TRAIN;
16680 +        run;
16681 +
16682 +        %if "&em_property_advancedadvisor" eq "N" %then %do;
16683 +            %EmAdviseStat(&em_export_train, maxClassLevels=32, metadata=tempmeta, statisticData=&em_user_emstat);
16684 +
16685 +            data &em_data_exportset;
16686 +                 set &em_data_exportset;
16687 +                 if NODEPORT='TRAIN' then do;
16688 +                    EMINFO="&em_data_eminfo";
16689 +                    EMINFOMODTIME=datetime();
16690 +                 end;
16691 +            run;
16692 +        %end;
16693 +        %else %do;
16694 +            %em_getname(key=EMSTATDEFAULT,     type=DATA);
16695 +            %if %sysfunc(exist(&em_user_emstatdefault)) %then %do;
16696 +                data &em_user_emstat /  view=&em_user_emstat;
16697 +                   set &em_user_emstatdefault;
16698 +                run;
16699 +            %end;
16700 +        %end;
16701 +    %end;
16702 +    %else %do;
16703 +        %if "&em_property_advancedadvisor" eq "N" %then %do;
16704 +            proc datasets lib=&em_lib nolist;
16705 +               delete &em_nodeid._EMINFO;
16706 +            run;
16707 +            quit;
16708 +            data &em_data_exportset;
16709 +                 set &em_data_exportset;
16710 +                 if NODEPORT='TRAIN' then do;
16711 +                    EMINFO="";
16712 +                    EMINFOMODTIME=.;
16713 +                 end;
16714 +            run;
16715 +        %end;
16716 +    %end;
16717 +
16718 +    data &em_data_exportset;
16719 +       set &em_data_exportset;
16720 +       if NODEPORT='TRAIN' then do;
16721 +          ROLE="&em_property_role";
16722 +       end;
16723 +    run;
16724 +
16725 +    %if %sysfunc(exist(&em_data_variableSet)) %then %do;
16726 +        proc freq data=&em_data_variableset noprint;
16727 +             table ROLE*LEVEL/out=work.tempMeta;
16728 +        run;
16729 +        proc print data=work.tempmeta label noobs;
16730 +           var ROLE LEVEL COUNT;
16731 +           label ROLE  = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))"
16732 +                 LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))"
16733 +                 COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
16734 +        title9  ' ';
16735 +        title10  "%sysfunc(sasmsg(sashelp.dmine, rpt_exptattributes_title, NOQUOTE, TRAIN))";
16736 +        run;
16737 +        title10;
16738 +    %end;
16739 +
16740 +    %if %sysfunc(exist(work.tempmeta)) %then %do;
16741 +        proc datasets lib=work nolist;
16742 +           delete tempmeta;
16743 +        run;
16744 +        quit;
16745 +    %end;
16746 +
16747 +%mend report;
16748 +
16749 +
16750 +
16751 +
16752 +
16753 +
16754 +
16755 +
16756 +
16757 +
16758 +
16759 +
16760 +
16761 +
16762 +
16763 +
16764 +
16765 +
16766 +
16767 +
16768 +
16769 +
16770 +
16771 +
16772 +
16773 +
16774 +
16775 +
16776 +
16777 +
16778 +
16779 +
16780 +
16781 +
16782 +
16783 +
16784 +
16785 +
16786 +
16787 +
16788 +
16789 +
16790 +
16791 +
16792 +
16793 +
16794 +
16795 +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 264 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 396 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: The file EMWS1.FIMPORT3_EMINFO (memtype=DATA) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS1.FIMPORT3_EXPORTSET.
NOTE: The data set EMWS1.FIMPORT3_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS1.FIMPORT3_EXPORTSET.
NOTE: The data set EMWS1.FIMPORT3_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 9 observations read from the data set EMWS1.FIMPORT3_VARIABLESET.
NOTE: The data set WORK.TEMPMETA has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 3 observations read from the data set WORK.TEMPMETA.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.TEMPMETA (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
16796  *------------------------------------------------------------*;
16797  * End REPORT: FIMPORT3;
16798  *------------------------------------------------------------*;
 
16799  /* Reset EM Options */
16800  options formchar="|----|+|---+=|-/\<>*";
16801  options nocenter ls=256 ps=10000;
16802  goptions reset=all device=GIF NODISPLAY;
 
16803  proc sort data=WORK.EM_USER_REPORT;
16804  by ID VIEW;
16805  run;
 
NOTE: There were 396 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 396 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
