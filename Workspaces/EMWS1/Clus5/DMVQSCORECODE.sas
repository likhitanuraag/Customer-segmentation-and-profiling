*****************************************;
*** Begin Scoring Code from PROC DMVQ ***;
*****************************************;


*** Begin Class Look-up, Standardization, Replacement ;
drop _dm_bad; _dm_bad = 0;

*** Standardize Age ;
drop T_Age ;
if missing( Age ) then T_Age = .;
else T_Age = (Age - 39.8608707020525) * 0.09718656389406;

*** Standardize Number_of_Contacts ;
drop T_Number_of_Contacts ;
if missing( Number_of_Contacts ) then T_Number_of_Contacts = .;
else T_Number_of_Contacts = (Number_of_Contacts
         - 2.56666230879853) * 0.36134043338427;

*** Generate dummy variables for Career ;
drop Careeradministration Careerblue_collar Careerentrepreneur Careerhousemaid
         Careermanagement Careerretired Careerself_employed Careerservices 
        Careerstudent Careertechnician Careerunemployed ;
if missing( Career ) then do;
   Careeradministration = .;
   Careerblue_collar = .;
   Careerentrepreneur = .;
   Careerhousemaid = .;
   Careermanagement = .;
   Careerretired = .;
   Careerself_employed = .;
   Careerservices = .;
   Careerstudent = .;
   Careertechnician = .;
   Careerunemployed = .;
end;
else do;
   length _dm14 $ 14; drop _dm14 ;
   _dm14 = put( Career , $14. );
   %DMNORMIP( _dm14 )
   _dm_find = 0; drop _dm_find;
   if _dm14 <= 'RETIRED'  then do;
      if _dm14 <= 'ENTREPRENEUR'  then do;
         if _dm14 <= 'BLUE-COLLAR'  then do;
            if _dm14 = 'ADMINISTRATION'  then do;
               Careeradministration = 0.50889118500978;
               Careerblue_collar = -0.16190726450904;
               Careerentrepreneur = -0.05789519750619;
               Careerhousemaid = -0.0490734720951;
               Careermanagement = -0.08356069142518;
               Careerretired = -0.06252737761989;
               Careerself_employed = -0.05765199118825;
               Careerservices = -0.09891082671327;
               Careerstudent = -0.04080813540891;
               Careertechnician = -0.13491224136642;
               Careerunemployed = -0.04845755775525;
               _dm_find = 1;
            end;
            else do;
               if _dm14 = 'BLUE-COLLAR'  then do;
                  Careeradministration = -0.17863684136789;
                  Careerblue_collar = 0.56147396576531;
                  Careerentrepreneur = -0.05789519750619;
                  Careerhousemaid = -0.0490734720951;
                  Careermanagement = -0.08356069142518;
                  Careerretired = -0.06252737761989;
                  Careerself_employed = -0.05765199118825;
                  Careerservices = -0.09891082671327;
                  Careerstudent = -0.04080813540891;
                  Careertechnician = -0.13491224136642;
                  Careerunemployed = -0.04845755775525;
                  _dm_find = 1;
               end;
            end;
         end;
         else do;
            if _dm14 = 'ENTREPRENEUR'  then do;
               Careeradministration = -0.17863684136789;
               Careerblue_collar = -0.16190726450904;
               Careerentrepreneur = 1.5701943823646;
               Careerhousemaid = -0.0490734720951;
               Careermanagement = -0.08356069142518;
               Careerretired = -0.06252737761989;
               Careerself_employed = -0.05765199118825;
               Careerservices = -0.09891082671327;
               Careerstudent = -0.04080813540891;
               Careertechnician = -0.13491224136642;
               Careerunemployed = -0.04845755775525;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm14 <= 'MANAGEMENT'  then do;
            if _dm14 = 'HOUSEMAID'  then do;
               Careeradministration = -0.17863684136789;
               Careerblue_collar = -0.16190726450904;
               Careerentrepreneur = -0.05789519750619;
               Careerhousemaid = 1.85246142180295;
               Careermanagement = -0.08356069142518;
               Careerretired = -0.06252737761989;
               Careerself_employed = -0.05765199118825;
               Careerservices = -0.09891082671327;
               Careerstudent = -0.04080813540891;
               Careertechnician = -0.13491224136642;
               Careerunemployed = -0.04845755775525;
               _dm_find = 1;
            end;
            else do;
               if _dm14 = 'MANAGEMENT'  then do;
                  Careeradministration = -0.17863684136789;
                  Careerblue_collar = -0.16190726450904;
                  Careerentrepreneur = -0.05789519750619;
                  Careerhousemaid = -0.0490734720951;
                  Careermanagement = 1.08791241838279;
                  Careerretired = -0.06252737761989;
                  Careerself_employed = -0.05765199118825;
                  Careerservices = -0.09891082671327;
                  Careerstudent = -0.04080813540891;
                  Careertechnician = -0.13491224136642;
                  Careerunemployed = -0.04845755775525;
                  _dm_find = 1;
               end;
            end;
         end;
         else do;
            if _dm14 = 'RETIRED'  then do;
               Careeradministration = -0.17863684136789;
               Careerblue_collar = -0.16190726450904;
               Careerentrepreneur = -0.05789519750619;
               Careerhousemaid = -0.0490734720951;
               Careermanagement = -0.08356069142518;
               Careerretired = 1.45387056599005;
               Careerself_employed = -0.05765199118825;
               Careerservices = -0.09891082671327;
               Careerstudent = -0.04080813540891;
               Careertechnician = -0.13491224136642;
               Careerunemployed = -0.04845755775525;
               _dm_find = 1;
            end;
         end;
      end;
   end;
   else do;
      if _dm14 <= 'STUDENT'  then do;
         if _dm14 <= 'SERVICES'  then do;
            if _dm14 = 'SELF-EMPLOYED'  then do;
               Careeradministration = -0.17863684136789;
               Careerblue_collar = -0.16190726450904;
               Careerentrepreneur = -0.05789519750619;
               Careerhousemaid = -0.0490734720951;
               Careermanagement = -0.08356069142518;
               Careerretired = -0.06252737761989;
               Careerself_employed = 1.57681828530897;
               Careerservices = -0.09891082671327;
               Careerstudent = -0.04080813540891;
               Careertechnician = -0.13491224136642;
               Careerunemployed = -0.04845755775525;
               _dm_find = 1;
            end;
            else do;
               if _dm14 = 'SERVICES'  then do;
                  Careeradministration = -0.17863684136789;
                  Careerblue_collar = -0.16190726450904;
                  Careerentrepreneur = -0.05789519750619;
                  Careerhousemaid = -0.0490734720951;
                  Careermanagement = -0.08356069142518;
                  Careerretired = -0.06252737761989;
                  Careerself_employed = -0.05765199118825;
                  Careerservices = 0.91907748535592;
                  Careerstudent = -0.04080813540891;
                  Careertechnician = -0.13491224136642;
                  Careerunemployed = -0.04845755775525;
                  _dm_find = 1;
               end;
            end;
         end;
         else do;
            if _dm14 = 'STUDENT'  then do;
               Careeradministration = -0.17863684136789;
               Careerblue_collar = -0.16190726450904;
               Careerentrepreneur = -0.05789519750619;
               Careerhousemaid = -0.0490734720951;
               Careermanagement = -0.08356069142518;
               Careerretired = -0.06252737761989;
               Careerself_employed = -0.05765199118825;
               Careerservices = -0.09891082671327;
               Careerstudent = 2.22766154295433;
               Careertechnician = -0.13491224136642;
               Careerunemployed = -0.04845755775525;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm14 = 'TECHNICIAN'  then do;
            Careeradministration = -0.17863684136789;
            Careerblue_collar = -0.16190726450904;
            Careerentrepreneur = -0.05789519750619;
            Careerhousemaid = -0.0490734720951;
            Careermanagement = -0.08356069142518;
            Careerretired = -0.06252737761989;
            Careerself_employed = -0.05765199118825;
            Careerservices = -0.09891082671327;
            Careerstudent = -0.04080813540891;
            Careertechnician = 0.67382109265536;
            Careerunemployed = -0.04845755775525;
            _dm_find = 1;
         end;
         else do;
            if _dm14 = 'UNEMPLOYED'  then do;
               Careeradministration = -0.17863684136789;
               Careerblue_collar = -0.16190726450904;
               Careerentrepreneur = -0.05789519750619;
               Careerhousemaid = -0.0490734720951;
               Careermanagement = -0.08356069142518;
               Careerretired = -0.06252737761989;
               Careerself_employed = -0.05765199118825;
               Careerservices = -0.09891082671327;
               Careerstudent = -0.04080813540891;
               Careertechnician = -0.13491224136642;
               Careerunemployed = 1.87600692443571;
               _dm_find = 1;
            end;
         end;
      end;
   end;
   if not _dm_find then do;
      Careeradministration = .;
      Careerblue_collar = .;
      Careerentrepreneur = .;
      Careerhousemaid = .;
      Careermanagement = .;
      Careerretired = .;
      Careerself_employed = .;
      Careerservices = .;
      Careerstudent = .;
      Careertechnician = .;
      Careerunemployed = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for Contact_Type ;
drop Contact_Typecellular Contact_Typetelephone ;
if missing( Contact_Type ) then do;
   Contact_Typecellular = .;
   Contact_Typetelephone = .;
end;
else do;
   length _dm9 $ 9; drop _dm9 ;
   _dm9 = put( Contact_Type , $9. );
   %DMNORMIP( _dm9 )
   if _dm9 = 'CELLULAR'  then do;
      Contact_Typecellular = 0.5314009348507;
      Contact_Typetelephone = -0.5314009348507;
   end;
   else if _dm9 = 'TELEPHONE'  then do;
      Contact_Typecellular = -0.94088454423979;
      Contact_Typetelephone = 0.94088454423979;
   end;
   else do;
      Contact_Typecellular = .;
      Contact_Typetelephone = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for Education ;
drop Educationilliterate Educationprimary_education 
        Educationprofessional_educat Educationsecondary_education 
        Educationuniversity_educatio ;
if missing( Education ) then do;
   Educationilliterate = .;
   Educationprimary_education = .;
   Educationprofessional_educat = .;
   Educationsecondary_education = .;
   Educationuniversity_educatio = .;
end;
else do;
   length _dm22 $ 22; drop _dm22 ;
   _dm22 = put( Education , $22. );
   %DMNORMIP( _dm22 )
   _dm_find = 0; drop _dm_find;
   if _dm22 <= 'PROFESSIONAL EDUCATION'  then do;
      if _dm22 <= 'PRIMARY EDUCATION'  then do;
         if _dm22 = 'ILLITERATE'  then do;
            Educationilliterate = 20.6090596234465;
            Educationprimary_education = -0.19682294664746;
            Educationprofessional_educat = -0.17542254053591;
            Educationsecondary_education = -0.36121784809716;
            Educationuniversity_educatio = -0.29911428077881;
            _dm_find = 1;
         end;
         else do;
            if _dm22 = 'PRIMARY EDUCATION'  then do;
               Educationilliterate = -0.00970421621424;
               Educationprimary_education = 1.01611511241349;
               Educationprofessional_educat = -0.17542254053591;
               Educationsecondary_education = -0.36121784809716;
               Educationuniversity_educatio = -0.29911428077881;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm22 = 'PROFESSIONAL EDUCATION'  then do;
            Educationilliterate = -0.00970421621424;
            Educationprimary_education = -0.19682294664746;
            Educationprofessional_educat = 1.14007453060057;
            Educationsecondary_education = -0.36121784809716;
            Educationuniversity_educatio = -0.29911428077881;
            _dm_find = 1;
         end;
      end;
   end;
   else do;
      if _dm22 = 'SECONDARY EDUCATION'  then do;
         Educationilliterate = -0.00970421621424;
         Educationprimary_education = -0.19682294664746;
         Educationprofessional_educat = -0.17542254053591;
         Educationsecondary_education = 0.55366801948403;
         Educationuniversity_educatio = -0.29911428077881;
         _dm_find = 1;
      end;
      else do;
         if _dm22 = 'UNIVERSITY EDUCATION'  then do;
            Educationilliterate = -0.00970421621424;
            Educationprimary_education = -0.19682294664746;
            Educationprofessional_educat = -0.17542254053591;
            Educationsecondary_education = -0.36121784809716;
            Educationuniversity_educatio = 0.66862327682085;
            _dm_find = 1;
         end;
      end;
   end;
   if not _dm_find then do;
      Educationilliterate = .;
      Educationprimary_education = .;
      Educationprofessional_educat = .;
      Educationsecondary_education = .;
      Educationuniversity_educatio = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for Marital_Statues ;
drop Marital_Statuesdivorced Marital_Statuesmarried Marital_Statuessingle ;
if missing( Marital_Statues ) then do;
   Marital_Statuesdivorced = .;
   Marital_Statuesmarried = .;
   Marital_Statuessingle = .;
end;
else do;
   length _dm8 $ 8; drop _dm8 ;
   _dm8 = put( Marital_Statues , $8. );
   %DMNORMIP( _dm8 )
   if _dm8 = 'MARRIED'  then do;
      Marital_Statuesdivorced = -0.20553878536687;
      Marital_Statuesmarried = 0.46536123012655;
      Marital_Statuessingle = -0.36123677782606;
   end;
   else if _dm8 = 'SINGLE'  then do;
      Marital_Statuesdivorced = -0.20553878536687;
      Marital_Statuesmarried = -0.71627070761013;
      Marital_Statuessingle = 0.9227316764451;
   end;
   else if _dm8 = 'DIVORCED'  then do;
      Marital_Statuesdivorced = 1.62171152759367;
      Marital_Statuesmarried = -0.71627070761013;
      Marital_Statuessingle = -0.36123677782606;
   end;
   else do;
      Marital_Statuesdivorced = .;
      Marital_Statuesmarried = .;
      Marital_Statuessingle = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for Mortage ;
drop Mortageno Mortageyes ;
if missing( Mortage ) then do;
   Mortageno = .;
   Mortageyes = .;
end;
else do;
   length _dm3 $ 3; drop _dm3 ;
   _dm3 = put( Mortage , $3. );
   %DMNORMIP( _dm3 )
   if _dm3 = 'YES'  then do;
      Mortageno = -0.65517776074461;
      Mortageyes = 0.65517776074461;
   end;
   else if _dm3 = 'NO'  then do;
      Mortageno = 0.76313171226595;
      Mortageyes = -0.76313171226595;
   end;
   else do;
      Mortageno = .;
      Mortageyes = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for Personal_Loan ;
drop Personal_Loanno Personal_Loanyes ;
if missing( Personal_Loan ) then do;
   Personal_Loanno = .;
   Personal_Loanyes = .;
end;
else do;
   length _dm3 $ 3; drop _dm3 ;
   _dm3 = put( Personal_Loan , $3. );
   %DMNORMIP( _dm3 )
   if _dm3 = 'NO'  then do;
      Personal_Loanno = 0.30377980276534;
      Personal_Loanyes = -0.30377980276534;
   end;
   else if _dm3 = 'YES'  then do;
      Personal_Loanno = -1.64588600639067;
      Personal_Loanyes = 1.64588600639067;
   end;
   else do;
      Personal_Loanno = .;
      Personal_Loanyes = .;
      _DM_BAD = 1;
   end;
end;

*** End Class Look-up, Standardization, Replacement ;


*** Omitted Cases;
if _dm_bad then do;
   _SEGMENT_ = .; Distance = .;
   goto CLUS5vlex ;
end; *** omitted;

*** Compute Distances and Cluster Membership;
label _SEGMENT_ = 'Segment Id' ;
label Distance = 'Distance' ;
array CLUS5vads [5] _temporary_;
drop _vqclus _vqmvar _vqnvar;
_vqmvar = 0;
do _vqclus = 1 to 5; CLUS5vads [_vqclus] = 0; end;
if not missing( T_Age ) then do;
   CLUS5vads [1] + ( T_Age - 0.67862441630987 )**2;
   CLUS5vads [2] + ( T_Age - -0.12220259479381 )**2;
   CLUS5vads [3] + ( T_Age - 0.1219909351517 )**2;
   CLUS5vads [4] + ( T_Age - -0.65843627090065 )**2;
   CLUS5vads [5] + ( T_Age - 0.83960729150403 )**2;
end;
else _vqmvar + 1;
if not missing( T_Number_of_Contacts ) then do;
   CLUS5vads [1] + ( T_Number_of_Contacts - -0.24215468364507 )**2;
   CLUS5vads [2] + ( T_Number_of_Contacts - 1.68542846033782 )**2;
   CLUS5vads [3] + ( T_Number_of_Contacts - 6.62638765591009 )**2;
   CLUS5vads [4] + ( T_Number_of_Contacts - -0.23646815611072 )**2;
   CLUS5vads [5] + ( T_Number_of_Contacts - -0.10438566163705 )**2;
end;
else _vqmvar + 1;
if not missing( Careeradministration ) then do;
   CLUS5vads [1] + ( Careeradministration - -0.04598399950118 )**2;
   CLUS5vads [2] + ( Careeradministration - 0.00991802300905 )**2;
   CLUS5vads [3] + ( Careeradministration - 0.00821114469253 )**2;
   CLUS5vads [4] + ( Careeradministration - 0.04401714138747 )**2;
   CLUS5vads [5] + ( Careeradministration - -0.14044083990246 )**2;
end;
else _vqmvar + 0.09090909090909;
if not missing( Careerblue_collar ) then do;
   CLUS5vads [1] + ( Careerblue_collar - 0.03061090015358 )**2;
   CLUS5vads [2] + ( Careerblue_collar - 0.00437260676506 )**2;
   CLUS5vads [3] + ( Careerblue_collar - -0.00158002613689 )**2;
   CLUS5vads [4] + ( Careerblue_collar - -0.03162470003694 )**2;
   CLUS5vads [5] + ( Careerblue_collar - 0.15959550450178 )**2;
end;
else _vqmvar + 0.09090909090909;
if not missing( Careerentrepreneur ) then do;
   CLUS5vads [1] + ( Careerentrepreneur - 0.01288719716082 )**2;
   CLUS5vads [2] + ( Careerentrepreneur - -0.00477410892134 )**2;
   CLUS5vads [3] + ( Careerentrepreneur - 0.00654106554938 )**2;
   CLUS5vads [4] + ( Careerentrepreneur - -0.01222396582552 )**2;
   CLUS5vads [5] + ( Careerentrepreneur - 0.12300364470167 )**2;
end;
else _vqmvar + 0.09090909090909;
if not missing( Careerhousemaid ) then do;
   CLUS5vads [1] + ( Careerhousemaid - 0.02587093195391 )**2;
   CLUS5vads [2] + ( Careerhousemaid - 0.00123168382812 )**2;
   CLUS5vads [3] + ( Careerhousemaid - 0.00611619501011 )**2;
   CLUS5vads [4] + ( Careerhousemaid - -0.02632308365609 )**2;
   CLUS5vads [5] + ( Careerhousemaid - 0.05656735534367 )**2;
end;
else _vqmvar + 0.09090909090909;
if not missing( Careermanagement ) then do;
   CLUS5vads [1] + ( Careermanagement - 0.01836862083405 )**2;
   CLUS5vads [2] + ( Careermanagement - -0.0047049177197 )**2;
   CLUS5vads [3] + ( Careermanagement - -0.00010482344414 )**2;
   CLUS5vads [4] + ( Careermanagement - -0.01736000982203 )**2;
   CLUS5vads [5] + ( Careermanagement - -0.08356069142518 )**2;
end;
else _vqmvar + 0.09090909090909;
if not missing( Careerretired ) then do;
   CLUS5vads [1] + ( Careerretired - 0.06650903898865 )**2;
   CLUS5vads [2] + ( Careerretired - -0.03756609459751 )**2;
   CLUS5vads [3] + ( Careerretired - 0.02549572200917 )**2;
   CLUS5vads [4] + ( Careerretired - -0.05988526248988 )**2;
   CLUS5vads [5] + ( Careerretired - 0.19020561298176 )**2;
end;
else _vqmvar + 0.09090909090909;
if not missing( Careerself_employed ) then do;
   CLUS5vads [1] + ( Careerself_employed - -0.00072825274511 )**2;
   CLUS5vads [2] + ( Careerself_employed - 0.01009060404575 )**2;
   CLUS5vads [3] + ( Careerself_employed - 0.00272421955306 )**2;
   CLUS5vads [4] + ( Careerself_employed - -0.00154954413227 )**2;
   CLUS5vads [5] + ( Careerself_employed - 0.21475972156128 )**2;
end;
else _vqmvar + 0.09090909090909;
if not missing( Careerservices ) then do;
   CLUS5vads [1] + ( Careerservices - -0.0072044266476 )**2;
   CLUS5vads [2] + ( Careerservices - 0.00372585495625 )**2;
   CLUS5vads [3] + ( Careerservices - -0.00758733697619 )**2;
   CLUS5vads [4] + ( Careerservices - 0.00674285627357 )**2;
   CLUS5vads [5] + ( Careerservices - -0.09891082671327 )**2;
end;
else _vqmvar + 0.09090909090909;
if not missing( Careerstudent ) then do;
   CLUS5vads [1] + ( Careerstudent - -0.03988642146948 )**2;
   CLUS5vads [2] + ( Careerstudent - -0.01613636054135 )**2;
   CLUS5vads [3] + ( Careerstudent - -0.03482272728658 )**2;
   CLUS5vads [4] + ( Careerstudent - 0.04390704656271 )**2;
   CLUS5vads [5] + ( Careerstudent - -0.04080813540891 )**2;
end;
else _vqmvar + 0.09090909090909;
if not missing( Careertechnician ) then do;
   CLUS5vads [1] + ( Careertechnician - -0.0268495448887 )**2;
   CLUS5vads [2] + ( Careertechnician - 0.00653288906948 )**2;
   CLUS5vads [3] + ( Careertechnician - -0.01541602314684 )**2;
   CLUS5vads [4] + ( Careertechnician - 0.02605471970296 )**2;
   CLUS5vads [5] + ( Careertechnician - -0.13491224136642 )**2;
end;
else _vqmvar + 0.09090909090909;
if not missing( Careerunemployed ) then do;
   CLUS5vads [1] + ( Careerunemployed - 0.00348555718662 )**2;
   CLUS5vads [2] + ( Careerunemployed - -0.00037423001092 )**2;
   CLUS5vads [3] + ( Careerunemployed - 0.01247535460962 )**2;
   CLUS5vads [4] + ( Careerunemployed - -0.00363758694804 )**2;
   CLUS5vads [5] + ( Careerunemployed - -0.04845755775525 )**2;
end;
else _vqmvar + 0.09090909090909;
if not missing( Contact_Typecellular ) then do;
   CLUS5vads [1] + ( Contact_Typecellular - -0.22328638032515 )**2;
   CLUS5vads [2] + ( Contact_Typecellular - -0.32029154688064 )**2;
   CLUS5vads [3] + ( Contact_Typecellular - -0.32710853976407 )**2;
   CLUS5vads [4] + ( Contact_Typecellular - 0.29360177598494 )**2;
   CLUS5vads [5] + ( Contact_Typecellular - 0.28602002166895 )**2;
end;
else _vqmvar + 0.5;
if not missing( Contact_Typetelephone ) then do;
   CLUS5vads [1] + ( Contact_Typetelephone - 0.22328638032515 )**2;
   CLUS5vads [2] + ( Contact_Typetelephone - 0.32029154688064 )**2;
   CLUS5vads [3] + ( Contact_Typetelephone - 0.32710853976407 )**2;
   CLUS5vads [4] + ( Contact_Typetelephone - -0.29360177598494 )**2;
   CLUS5vads [5] + ( Contact_Typetelephone - -0.28602002166895 )**2;
end;
else _vqmvar + 0.5;
if not missing( Educationilliterate ) then do;
   CLUS5vads [1] + ( Educationilliterate - -0.00970421621424 )**2;
   CLUS5vads [2] + ( Educationilliterate - -0.00970421621424 )**2;
   CLUS5vads [3] + ( Educationilliterate - -0.00970421621424 )**2;
   CLUS5vads [4] + ( Educationilliterate - -0.00970421621424 )**2;
   CLUS5vads [5] + ( Educationilliterate - 20.6090596234465 )**2;
end;
else _vqmvar + 0.19999999999999;
if not missing( Educationprimary_education ) then do;
   CLUS5vads [1] + ( Educationprimary_education - 0.11253680674897 )**2;
   CLUS5vads [2] + ( Educationprimary_education - -0.01819802966053 )**2;
   CLUS5vads [3] + ( Educationprimary_education - 0.04320437374718 )**2;
   CLUS5vads [4] + ( Educationprimary_education - -0.10975177456013 )**2;
   CLUS5vads [5] + ( Educationprimary_education - -0.19682294664746 )**2;
end;
else _vqmvar + 0.2;
if not missing( Educationprofessional_educat ) then do;
   CLUS5vads [1] + ( Educationprofessional_educat - -0.00613666830991 )**2;
   CLUS5vads [2] + ( Educationprofessional_educat - 0.00090510921077 )**2;
   CLUS5vads [3] + ( Educationprofessional_educat - -0.01922895689174 )**2;
   CLUS5vads [4] + ( Educationprofessional_educat - 0.00656805206758 )**2;
   CLUS5vads [5] + ( Educationprofessional_educat - -0.17542254053591 )**2;
end;
else _vqmvar + 0.2;
if not missing( Educationsecondary_education ) then do;
   CLUS5vads [1] + ( Educationsecondary_education - -0.01566628434334 )**2;
   CLUS5vads [2] + ( Educationsecondary_education - 0.00828632064374 )**2;
   CLUS5vads [3] + ( Educationsecondary_education - -0.00636765671342 )**2;
   CLUS5vads [4] + ( Educationsecondary_education - 0.01455592676252 )**2;
   CLUS5vads [5] + ( Educationsecondary_education - -0.36121784809716 )**2;
end;
else _vqmvar + 0.19999999999999;
if not missing( Educationuniversity_educatio ) then do;
   CLUS5vads [1] + ( Educationuniversity_educatio - -0.06824584789428 )**2;
   CLUS5vads [2] + ( Educationuniversity_educatio - 0.00554383920626 )**2;
   CLUS5vads [3] + ( Educationuniversity_educatio - -0.01313378882323 )**2;
   CLUS5vads [4] + ( Educationuniversity_educatio - 0.06779190902318 )**2;
   CLUS5vads [5] + ( Educationuniversity_educatio - -0.29911428077881 )**2;
end;
else _vqmvar + 0.19999999999999;
if not missing( Marital_Statuesdivorced ) then do;
   CLUS5vads [1] + ( Marital_Statuesdivorced - 0.05526969614983 )**2;
   CLUS5vads [2] + ( Marital_Statuesdivorced - 0.00500857579729 )**2;
   CLUS5vads [3] + ( Marital_Statuesdivorced - 0.00177457467877 )**2;
   CLUS5vads [4] + ( Marital_Statuesdivorced - -0.05632784681289 )**2;
   CLUS5vads [5] + ( Marital_Statuesdivorced - -0.0025109728157 )**2;
end;
else _vqmvar + 0.33333333333333;
if not missing( Marital_Statuesmarried ) then do;
   CLUS5vads [1] + ( Marital_Statuesmarried - 0.23339703152983 )**2;
   CLUS5vads [2] + ( Marital_Statuesmarried - 0.03154045110447 )**2;
   CLUS5vads [3] + ( Marital_Statuesmarried - 0.01328568666528 )**2;
   CLUS5vads [4] + ( Marital_Statuesmarried - -0.24033752790255 )**2;
   CLUS5vads [5] + ( Marital_Statuesmarried - 0.2684225738371 )**2;
end;
else _vqmvar + 0.33333333333333;
if not missing( Marital_Statuessingle ) then do;
   CLUS5vads [1] + ( Marital_Statuessingle - -0.29244743006118 )**2;
   CLUS5vads [2] + ( Marital_Statuessingle - -0.03779146174423 )**2;
   CLUS5vads [3] + ( Marital_Statuessingle - -0.01568326242854 )**2;
   CLUS5vads [4] + ( Marital_Statuessingle - 0.30073255476575 )**2;
   CLUS5vads [5] + ( Marital_Statuessingle - -0.28990519703322 )**2;
end;
else _vqmvar + 0.33333333333333;
if not missing( Mortageno ) then do;
   CLUS5vads [1] + ( Mortageno - 0.14972192103062 )**2;
   CLUS5vads [2] + ( Mortageno - 0.05772911722366 )**2;
   CLUS5vads [3] + ( Mortageno - 0.07455930320541 )**2;
   CLUS5vads [4] + ( Mortageno - -0.16283046604234 )**2;
   CLUS5vads [5] + ( Mortageno - -0.02481799496213 )**2;
end;
else _vqmvar + 0.5;
if not missing( Mortageyes ) then do;
   CLUS5vads [1] + ( Mortageyes - -0.14972192103062 )**2;
   CLUS5vads [2] + ( Mortageyes - -0.05772911722366 )**2;
   CLUS5vads [3] + ( Mortageyes - -0.07455930320541 )**2;
   CLUS5vads [4] + ( Mortageyes - 0.16283046604234 )**2;
   CLUS5vads [5] + ( Mortageyes - 0.02481799496213 )**2;
end;
else _vqmvar + 0.5;
if not missing( Personal_Loanno ) then do;
   CLUS5vads [1] + ( Personal_Loanno - 0.10799840911316 )**2;
   CLUS5vads [2] + ( Personal_Loanno - 0.00863638956271 )**2;
   CLUS5vads [3] + ( Personal_Loanno - 0.00541405888395 )**2;
   CLUS5vads [4] + ( Personal_Loanno - -0.10986459268399 )**2;
   CLUS5vads [5] + ( Personal_Loanno - -0.02116449876065 )**2;
end;
else _vqmvar + 0.5;
if not missing( Personal_Loanyes ) then do;
   CLUS5vads [1] + ( Personal_Loanyes - -0.10799840911316 )**2;
   CLUS5vads [2] + ( Personal_Loanyes - -0.00863638956271 )**2;
   CLUS5vads [3] + ( Personal_Loanyes - -0.00541405888395 )**2;
   CLUS5vads [4] + ( Personal_Loanyes - 0.10986459268399 )**2;
   CLUS5vads [5] + ( Personal_Loanyes - 0.02116449876065 )**2;
end;
else _vqmvar + 0.5;
_vqnvar = 8 - _vqmvar;
if _vqnvar <= 2.4556356947869E-11 then do;
   _SEGMENT_ = .; Distance = .;
end;
else do;
   _SEGMENT_ = 1; Distance = CLUS5vads [1];
   _vqfzdst = Distance * 0.99999999999988; drop _vqfzdst;
   do _vqclus = 2 to 5;
      if CLUS5vads [_vqclus] < _vqfzdst then do;
         _SEGMENT_ = _vqclus; Distance = CLUS5vads [_vqclus];
         _vqfzdst = Distance * 0.99999999999988;
      end;
   end;
   Distance = sqrt(Distance * (8 / _vqnvar));
end;
CLUS5vlex :;

***************************************;
*** End Scoring Code from PROC DMVQ ***;
***************************************;
